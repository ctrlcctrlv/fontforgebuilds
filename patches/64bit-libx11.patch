diff -ruBN libX11-1.3.6/ltmain.sh libX11-1.3.6-a/ltmain.sh
--- libX11-1.3.6/ltmain.sh	2014-05-15 20:31:49.368400000 +0800
+++ libX11-1.3.6-a/ltmain.sh	2014-05-15 20:32:04.322400000 +0800
@@ -2560,7 +2560,7 @@
     ;;
   *ar\ archive*) # could be an import, or static
     if eval $OBJDUMP -f $1 | $SED -e '10q' 2>/dev/null |
-       $EGREP 'file format pe-i386(.*architecture: i386)?' >/dev/null ; then
+       $EGREP 'file format (pe-i386(.*architecture: i386)?|pe-x86-64)' >/dev/null; then
       win32_nmres=`eval $NM -f posix -A $1 |
 	$SED -n -e '
 	    1,100{

diff -ruBN libX11-1.3.6/src/UIThrStubs.c libX11-1.3.6-a/src/UIThrStubs.c
--- libX11-1.3.6/src/UIThrStubs.c	2009-10-17 06:26:29.000000000 +0900
+++ libX11-1.3.6-a/src/UIThrStubs.c	2010-05-13 02:10:28.838904800 +0900
@@ -84,6 +84,8 @@
     /*
      * Don't know what to do here. Is there something do be done at all?
      */
+#include <pthread.h>
+typedef pthread_t xthread_t;
 #else /* !WIN32 */
 #ifdef USE_TIS_SUPPORT
 #include <tis.h>
diff -ruBN libX11-1.3.6/modules/im/ximcp/imCallbk.c libX11-1.3.6-a/modules/im/ximcp/imCallbk.c
--- libX11-1.3.6/modules/im/ximcp/imCallbk.c	2010-06-05 01:42:29.000000000 +0800
+++ libX11-1.3.6-a/modules/im/ximcp/imCallbk.c	2014-01-13 12:02:33.972258400 +0800
@@ -92,17 +92,17 @@
     (im->private.proto.read((im),(XPointer)(buf),(buf_len),&(len)))
 #define _XimFlushData(im) im->private.proto.flush((im))
 
-Private XimCbStatus _XimGeometryCallback(Xim, Xic, char*, int);
-Private XimCbStatus _XimStrConversionCallback(Xim, Xic, char*, int);
-Private XimCbStatus _XimPreeditStartCallback(Xim, Xic, char*, int);
-Private XimCbStatus _XimPreeditDoneCallback(Xim, Xic, char*, int);
-Private void _free_memory_for_text(XIMText*);
-Private XimCbStatus _XimPreeditDrawCallback(Xim, Xic, char*, int);
-Private XimCbStatus _XimPreeditCaretCallback(Xim, Xic, char*, int);
-Private XimCbStatus _XimStatusStartCallback(Xim, Xic, char*, int);
-Private XimCbStatus _XimStatusDoneCallback(Xim, Xic, char*, int);
-Private XimCbStatus _XimStatusDrawCallback(Xim, Xic, char*, int);
-Private XimCbStatus _XimPreeditStateNotifyCallback(Xim, Xic, char *, int);
+XPrivate XimCbStatus _XimGeometryCallback(Xim, Xic, char*, int);
+XPrivate XimCbStatus _XimStrConversionCallback(Xim, Xic, char*, int);
+XPrivate XimCbStatus _XimPreeditStartCallback(Xim, Xic, char*, int);
+XPrivate XimCbStatus _XimPreeditDoneCallback(Xim, Xic, char*, int);
+XPrivate void _free_memory_for_text(XIMText*);
+XPrivate XimCbStatus _XimPreeditDrawCallback(Xim, Xic, char*, int);
+XPrivate XimCbStatus _XimPreeditCaretCallback(Xim, Xic, char*, int);
+XPrivate XimCbStatus _XimStatusStartCallback(Xim, Xic, char*, int);
+XPrivate XimCbStatus _XimStatusDoneCallback(Xim, Xic, char*, int);
+XPrivate XimCbStatus _XimStatusDrawCallback(Xim, Xic, char*, int);
+XPrivate XimCbStatus _XimPreeditStateNotifyCallback(Xim, Xic, char *, int);
 
 #if defined(__STDC__) && ((defined(sun) && defined(SVR4)) || defined(WIN32))
 #define RConst /**/
@@ -138,13 +138,13 @@
     };
 
 
-Private Bool
+XPrivate Bool
 _XimIsReadyForProcess(Xic ic)
 {
     return(!ic->private.proto.waitCallback); /* check HM */
 }
 
-Private void
+XPrivate void
 _XimProcessPendingCallbacks(Xic ic)
 {
     XimPendingCallback pcbq;
@@ -161,7 +161,7 @@
     }
 }
 
-Private void
+XPrivate void
 _XimPutCbIntoQueue(Xic ic, XimPendingCallback call_data)
 {
     XimPendingCallback pcbq = ic->private.proto.pend_cb_que;
@@ -182,7 +182,7 @@
     }
 }
 
-Public Bool
+XPublic Bool
 _XimCbDispatch(Xim xim,
 	       INT16 len,
 	       XPointer data,
@@ -259,7 +259,7 @@
     return True;
 }
 
-Private XimCbStatus
+XPrivate XimCbStatus
 _XimGeometryCallback(Xim im,
 		     Xic ic,
 		     char* proto,
@@ -282,7 +282,7 @@
     return XimCbSuccess;
 }
 
-Private XimCbStatus
+XPrivate XimCbStatus
 _XimStrConversionCallback(Xim im,
 			  Xic ic,
 			  char* proto,
@@ -365,7 +365,7 @@
     return XimCbSuccess;
 }
 
-Private XimCbStatus
+XPrivate XimCbStatus
 _XimPreeditStartCallback(Xim im,
 			 Xic ic,
 			 char* proto,
@@ -414,7 +414,7 @@
     return XimCbSuccess;
 }
 
-Private XimCbStatus
+XPrivate XimCbStatus
 _XimPreeditDoneCallback(Xim im,
 			Xic ic,
 			char* proto,
@@ -437,7 +437,7 @@
     return XimCbSuccess;
 }
 
-Private void
+XPrivate void
 _read_text_from_packet(Xim im,
 		       char* buf,
 		       XIMText** text_ptr)
@@ -552,7 +552,7 @@
     }
 }
 
-Private void
+XPrivate void
 _free_memory_for_text(XIMText* text)
 {
     if (text) {
@@ -564,7 +564,7 @@
     }
 }
 
-Private XimCbStatus
+XPrivate XimCbStatus
 _XimPreeditDrawCallback(Xim im,
 			Xic ic,
 			char* proto,
@@ -595,7 +595,7 @@
     return XimCbSuccess;
 }
 
-Private XimCbStatus
+XPrivate XimCbStatus
 _XimPreeditCaretCallback(Xim im,
 			 Xic ic,
 			 char* proto,
@@ -647,7 +647,7 @@
     return XimCbSuccess;
 }
 
-Private XimCbStatus
+XPrivate XimCbStatus
 _XimStatusStartCallback(Xim im,
 			Xic ic,
 			char* proto,
@@ -670,7 +670,7 @@
     return XimCbSuccess;
 }
 
-Private XimCbStatus
+XPrivate XimCbStatus
 _XimStatusDoneCallback(Xim im,
 		       Xic ic,
 		       char* proto,
@@ -693,7 +693,7 @@
     return XimCbSuccess;
 }
 
-Private XimCbStatus
+XPrivate XimCbStatus
 _XimStatusDrawCallback(Xim im,
 		       Xic ic,
 		       char* proto,
@@ -728,7 +728,7 @@
     return XimCbSuccess;
 }
 
-Private XimCbStatus
+XPrivate XimCbStatus
 _XimPreeditStateNotifyCallback( Xim im, Xic ic, char* proto, int len )
 {
     XICCallback	*cb = &ic->core.preedit_attr.state_notify_callback;
diff -ruBN libX11-1.3.6/modules/im/ximcp/imDefFlt.c libX11-1.3.6-a/modules/im/ximcp/imDefFlt.c
--- libX11-1.3.6/modules/im/ximcp/imDefFlt.c	2010-08-24 16:16:11.000000000 +0800
+++ libX11-1.3.6-a/modules/im/ximcp/imDefFlt.c	2014-01-13 12:02:33.996670900 +0800
@@ -36,7 +36,7 @@
 #include "Xlcint.h"
 #include "Ximint.h"
 
-Private long
+XPrivate long
 _XimTriggerCheck(
     Xim			 im,
     XKeyEvent		*ev,
@@ -67,7 +67,7 @@
     return -1;
 }
 
-Private long
+XPrivate long
 _XimTriggerOnCheck(
     Xim		 im,
     XKeyEvent	*ev)
@@ -76,7 +76,7 @@
 					&im->private.proto.im_onkeylist[1]);
 }
 
-Private long
+XPrivate long
 _XimTriggerOffCheck(
     Xim		 im,
     XKeyEvent	*ev)
@@ -85,7 +85,7 @@
 					&im->private.proto.im_offkeylist[1]);
 }
 
-Private Bool
+XPrivate Bool
 _XimOnKeysCheck(
     Xic		 ic,
     XKeyEvent	*ev)
@@ -104,7 +104,7 @@
     return False;
 }
 
-Private Bool
+XPrivate Bool
 _XimOffKeysCheck(
     Xic		 ic,
     XKeyEvent	*ev)
@@ -123,7 +123,7 @@
     return False;
 }
 
-Private void
+XPrivate void
 _XimPendingFilter(
     Xic	 	 ic)
 {
@@ -136,7 +136,7 @@
     return;
 }
 
-Private Bool
+XPrivate Bool
 _XimProtoKeypressFilter(
     Xic		 ic,
     XKeyEvent	*ev)
@@ -189,7 +189,7 @@
     return NOTFILTERD;
 }
 
-Private Bool
+XPrivate Bool
 _XimFilterKeypress(
     Display		*d,
     Window		 w,
@@ -199,7 +199,7 @@
     return _XimProtoKeypressFilter((Xic)client_data, (XKeyEvent *)ev );
 }
 
-Private Bool
+XPrivate Bool
 _XimProtoKeyreleaseFilter(
     Xic		 ic,
     XKeyEvent	*ev)
@@ -252,7 +252,7 @@
     return NOTFILTERD;
 }
 
-Private Bool
+XPrivate Bool
 _XimFilterKeyrelease(
     Display		*d,
     Window		 w,
@@ -262,7 +262,7 @@
     return _XimProtoKeyreleaseFilter((Xic)client_data, (XKeyEvent *)ev);
 }
 
-Private void
+XPrivate void
 _XimRegisterKeyPressFilter(
     Xic		 ic)
 {
@@ -279,7 +279,7 @@
     return;
 }
 
-Private void
+XPrivate void
 _XimRegisterKeyReleaseFilter(
     Xic		 ic)
 {
@@ -296,7 +296,7 @@
     return;
 }
 
-Private void
+XPrivate void
 _XimUnregisterKeyPressFilter(
     Xic		 ic)
 {
@@ -312,7 +312,7 @@
     return;
 }
 
-Private void
+XPrivate void
 _XimUnregisterKeyReleaseFilter(
     Xic		 ic)
 {
@@ -328,7 +328,7 @@
     return;
 }
 
-Public void
+XPublic void
 _XimRegisterFilter(
     Xic		 ic)
 {
@@ -338,7 +338,7 @@
     return;
 }
 
-Public void
+XPublic void
 _XimUnregisterFilter(
     Xic		 ic)
 {
@@ -347,7 +347,7 @@
     return;
 }
 
-Public void
+XPublic void
 _XimReregisterFilter(
     Xic		 ic)
 {
@@ -359,7 +359,7 @@
     return;
 }
 
-Private Bool
+XPrivate Bool
 _XimFilterServerDestroy(
     Display		*d,
     Window		 w,
@@ -381,7 +381,7 @@
     return True;
 }
 
-Public void
+XPublic void
 _XimRegisterServerFilter(
     Xim		 im)
 {
@@ -400,7 +400,7 @@
     return;
 }
 
-Public void
+XPublic void
 _XimUnregisterServerFilter(
     Xim		 im)
 {
diff -ruBN libX11-1.3.6/modules/im/ximcp/imDefIc.c libX11-1.3.6-a/modules/im/ximcp/imDefIc.c
--- libX11-1.3.6/modules/im/ximcp/imDefIc.c	2010-06-05 01:42:29.000000000 +0800
+++ libX11-1.3.6-a/modules/im/ximcp/imDefIc.c	2014-01-13 12:02:34.059166900 +0800
@@ -56,7 +56,7 @@
 #include "Xlcint.h"
 #include "Ximint.h"
 
-Private Bool
+XPrivate Bool
 _XimCreateICCheck(
     Xim          im,
     INT16        len,
@@ -81,7 +81,7 @@
 }
 
 #ifdef XIM_CONNECTABLE
-Public Bool
+XPublic Bool
 _XimReCreateIC(ic)
     Xic			 ic;
 {
@@ -244,7 +244,7 @@
     return False;
 }
 
-Private char *
+XPrivate char *
 _XimDelayModeGetICValues(ic, arg)
     Xic			 ic;
     XIMArg		*arg;
@@ -259,7 +259,7 @@
 }
 #endif /* XIM_CONNECTABLE */
 
-Private Bool
+XPrivate Bool
 _XimGetICValuesCheck(
     Xim          im,
     INT16        len,
@@ -288,7 +288,7 @@
     return False;
 }
 
-Private char *
+XPrivate char *
 _XimProtoGetICValues(
     XIC			 xic,
     XIMArg		*arg)
@@ -424,7 +424,7 @@
 }
 
 #ifdef XIM_CONNECTABLE
-Private Bool
+XPrivate Bool
 _XimCheckNestQuarkList(quark_list, num_quark, quark, separator)
     XrmQuark		*quark_list;
     int			 num_quark;
@@ -444,7 +444,7 @@
     return False;
 }
 
-Private Bool
+XPrivate Bool
 _XimCheckNestedQuarkList(quark_list, idx, num_quark, arg, separator)
     XrmQuark		**quark_list;
     int			  idx;
@@ -485,7 +485,7 @@
     return True;
 }
 
-Private Bool
+XPrivate Bool
 _XimCheckICQuarkList(quark_list, num_quark, quark, idx)
     XrmQuark		*quark_list;
     int			 num_quark;
@@ -503,7 +503,7 @@
     return False;
 }
 
-Private Bool
+XPrivate Bool
 _XimSaveICValues(ic, arg)
     Xic			 ic;
     XIMArg		*arg;
@@ -610,7 +610,7 @@
     return True;
 }
 
-Private char *
+XPrivate char *
 _XimDelayModeSetICValues(ic, arg)
     Xic			 ic;
     XIMArg		*arg;
@@ -628,7 +628,7 @@
 }
 #endif /* XIM_CONNECTABLE */
 
-Private Bool
+XPrivate Bool
 _XimSetICValuesCheck(
     Xim          im,
     INT16        len,
@@ -657,7 +657,7 @@
     return False;
 }
 
-Private char *
+XPrivate char *
 _XimProtoSetICValues(
     XIC			 xic,
     XIMArg		*arg)
@@ -807,7 +807,7 @@
     return name;
 }
 
-Private Bool
+XPrivate Bool
 _XimDestroyICCheck(
     Xim          im,
     INT16        len,
@@ -837,7 +837,7 @@
     return ret;
 }
 
-Private void
+XPrivate void
 _XimProtoICFree(
     Xic		 ic)
 {
@@ -884,7 +884,7 @@
     return;
 }
 
-Private void
+XPrivate void
 _XimProtoDestroyIC(
     XIC		 xic)
 {
@@ -927,7 +927,7 @@
     return;
 }
 
-Private void
+XPrivate void
 _XimProtoSetFocus(
     XIC		 xic)
 {
@@ -974,7 +974,7 @@
     return;
 }
 
-Private void
+XPrivate void
 _XimProtoUnsetFocus(
     XIC		 xic)
 {
@@ -1021,7 +1021,7 @@
     return;
 }
 
-Private Bool
+XPrivate Bool
 _XimResetICCheck(
     Xim          im,
     INT16        len,
@@ -1050,7 +1050,7 @@
     return False;
 }
 
-Private char *
+XPrivate char *
 _XimProtoReset(
     XIC		 xic,
     char *     (*retfunc) (Xim im, Xic ic, XPointer buf) )
@@ -1121,7 +1121,7 @@
     return commit;
 }
 
-Private char *
+XPrivate char *
 _XimCommitedMbString(
     Xim			 im,
     Xic			 ic,
@@ -1171,14 +1171,14 @@
     return new_commit;
 }
 
-Private char *
+XPrivate char *
 _XimProtoMbReset(
     XIC		 xic)
 {
     return _XimProtoReset(xic, _XimCommitedMbString);
 }
 
-Private wchar_t *
+XPrivate wchar_t *
 _XimCommitedWcString(
     Xim		 im,
     Xic		 ic,
@@ -1229,7 +1229,7 @@
     return new_commit;
 }
 
-Private wchar_t *
+XPrivate wchar_t *
 _XimProtoWcReset(
     XIC		 xic)
 {
@@ -1237,7 +1237,7 @@
 			(char * (*) (Xim, Xic, XPointer)) _XimCommitedWcString);
 }
 
-Private char *
+XPrivate char *
 _XimCommitedUtf8String(
     Xim			 im,
     Xic			 ic,
@@ -1287,14 +1287,14 @@
     return new_commit;
 }
 
-Private char *
+XPrivate char *
 _XimProtoUtf8Reset(
     XIC		 xic)
 {
     return _XimProtoReset(xic, _XimCommitedUtf8String);
 }
 
-Private XICMethodsRec ic_methods = {
+XPrivate XICMethodsRec ic_methods = {
     _XimProtoDestroyIC,		/* destroy */
     _XimProtoSetFocus,		/* set_focus */
     _XimProtoUnsetFocus,	/* unset_focus */
@@ -1308,7 +1308,7 @@
     _XimProtoUtf8LookupString	/* utf8_lookup_string */
 };
 
-Private Bool
+XPrivate Bool
 _XimGetInputStyle(
     XIMArg		*arg,
     XIMStyle		*input_style)
@@ -1325,7 +1325,7 @@
 }
 
 #ifdef XIM_CONNECTABLE
-Private Bool
+XPrivate Bool
 _XimDelayModeCreateIC(
     Xic			 ic,
     XIMArg		*values,
@@ -1360,7 +1360,7 @@
     return True;
 }
 
-Public Bool
+XPublic Bool
 _XimReconnectModeCreateIC(ic)
     Xic			 ic;
 {
@@ -1386,7 +1386,7 @@
 }
 #endif /* XIM_CONNECTABLE */
 
-Public XIC
+XPublic XIC
 _XimProtoCreateIC(
     XIM			 xim,
     XIMArg		*arg)
diff -ruBN libX11-1.3.6/modules/im/ximcp/imDefIm.c libX11-1.3.6-a/modules/im/ximcp/imDefIm.c
--- libX11-1.3.6/modules/im/ximcp/imDefIm.c	2010-08-24 16:16:11.000000000 +0800
+++ libX11-1.3.6-a/modules/im/ximcp/imDefIm.c	2014-01-13 12:02:34.143145900 +0800
@@ -64,7 +64,7 @@
 #include "Ximint.h"
 
 
-Public int
+XPublic int
 _XimCheckDataSize(
     XPointer	 buf,
     int		 len)
@@ -76,7 +76,7 @@
     return  buf_s[1];
 }
 
-Public void
+XPublic void
 _XimSetHeader(
     XPointer	 buf,
     CARD8	 major_opcode,
@@ -94,7 +94,7 @@
     return;
 }
 
-Public char
+XPublic char
 _XimGetMyEndian(void)
 {
     CARD16	 test_card = 1;
@@ -105,7 +105,7 @@
 	return BIGENDIAN;
 }
 
-Private Bool
+XPrivate Bool
 _XimCheckServerName(
     Xim		   im,
     char	  *str)
@@ -143,7 +143,7 @@
     return True;
 }
 
-Private char *
+XPrivate char *
 _XimCheckLocaleName(
     Xim		   im,
     char	  *address,
@@ -183,7 +183,7 @@
     return (char *)NULL;
 }
 
-Private Bool
+XPrivate Bool
 _XimCheckTransport(
     char	  *address,
     int		   address_len,
@@ -227,7 +227,7 @@
     return True;
 }
 
-Private Bool
+XPrivate Bool
 _CheckSNEvent(
     Display		*display,
     XEvent		*xevent,
@@ -241,7 +241,7 @@
     return False;
 }
 
-Private Bool
+XPrivate Bool
 _XimGetSelectionNotify(
     Display		 *display,
     Window		  window,
@@ -270,7 +270,7 @@
     return True;
 }
 
-Private Bool
+XPrivate Bool
 _XimPreConnectionIM(
     Xim			 im,
     Atom		 selection)
@@ -388,7 +388,7 @@
     return False;
 }
 
-Private Bool
+XPrivate Bool
 _XimPreConnect(
     Xim		    im)
 {
@@ -435,7 +435,7 @@
     return True;
 }
 
-Private Bool
+XPrivate Bool
 _XimGetAuthProtocolNames(
     Xim		 im,
     CARD16	*buf,
@@ -453,7 +453,7 @@
     return True;
 }
 
-Private Bool
+XPrivate Bool
 _XimSetAuthReplyData(
     Xim		 im,
     XPointer	 buf,
@@ -466,7 +466,7 @@
     return True;
 }
 
-Private Bool
+XPrivate Bool
 _XimSetAuthNextData(
     Xim		 im,
     XPointer	 buf,
@@ -479,7 +479,7 @@
     return True;
 }
 
-Private Bool
+XPrivate Bool
 _XimSetAuthRequiredData(
     Xim		 im,
     XPointer	 buf,
@@ -492,7 +492,7 @@
     return True;
 }
 
-Private Bool
+XPrivate Bool
 _XimCheckAuthSetupData(
     Xim		 im,
     XPointer	 buf)
@@ -503,7 +503,7 @@
     return True;
 }
 
-Private Bool
+XPrivate Bool
 _XimCheckAuthNextData(
     Xim		 im,
     XPointer	 buf)
@@ -518,7 +518,7 @@
 #define	GOOD_AUTH	1
 #define	BAD_AUTH	0
 
-Private int
+XPrivate int
 _XimClientAuthCheck(
     Xim		 im,
     XPointer	 buf)
@@ -529,7 +529,7 @@
     return NO_MORE_AUTH;
 }
 
-Private void
+XPrivate void
 _XimAuthNG(
     Xim		 im)
 {
@@ -543,7 +543,7 @@
     return;
 }
 
-Private	Bool
+XPrivate	Bool
 _XimAllRecv(
     Xim		 im,
     INT16	 len,
@@ -556,7 +556,7 @@
 #define	CLIENT_WAIT1		1
 #define	CLIENT_WAIT2		2
 
-Private Bool
+XPrivate Bool
 _XimConnection(
     Xim		 im)
 {
@@ -717,7 +717,7 @@
     return True;
 }
 
-Private	Bool
+XPrivate	Bool
 _XimDisconnectCheck(
     Xim		 im,
     INT16	 len,
@@ -736,7 +736,7 @@
     return False;
 }
 
-Private Bool
+XPrivate Bool
 _XimDisconnect(
     Xim		 im)
 {
@@ -776,7 +776,7 @@
     return True;
 }
 
-Private	Bool
+XPrivate	Bool
 _XimOpenCheck(
     Xim		 im,
     INT16	 len,
@@ -795,7 +795,7 @@
     return False;
 }
 
-Private Bool
+XPrivate Bool
 _XimOpen(
     Xim			 im)
 {
@@ -891,7 +891,7 @@
     return True;
 }
 
-Private	Bool
+XPrivate	Bool
 _XimCloseCheck(
     Xim		 im,
     INT16	 len,
@@ -915,7 +915,7 @@
     return False;
 }
 
-Private Bool
+XPrivate Bool
 _XimClose(
     Xim		 im)
 {
@@ -973,7 +973,7 @@
     return True;
 }
 
-Public void
+XPublic void
 _XimProtoIMFree(
     Xim		  im)
 {
@@ -1091,7 +1091,7 @@
     return;
 }
 
-Private Status
+XPrivate Status
 _XimProtoCloseIM(
     XIM		 xim)
 {
@@ -1139,7 +1139,7 @@
 }
 
 #ifdef XIM_CONNECTABLE
-Private Bool
+XPrivate Bool
 _XimCheckIMQuarkList(
     XrmQuark		*quark_list,
     int			 num_quark,
@@ -1155,7 +1155,7 @@
     return False;
 }
 
-Private Bool
+XPrivate Bool
 _XimSaveIMValues(
     Xim			 im,
     XIMArg		*arg)
@@ -1204,7 +1204,7 @@
     return True;
 }
 
-Private char *
+XPrivate char *
 _XimDelayModeSetIMValues(
     Xim			 im,
     XIMArg		*arg)
@@ -1222,7 +1222,7 @@
 }
 #endif /* XIM_CONNECTABLE */
 
-Private Bool
+XPrivate Bool
 _XimSetIMValuesCheck(
     Xim          im,
     INT16        len,
@@ -1246,7 +1246,7 @@
     return False;
 }
 
-Private char *
+XPrivate char *
 _XimProtoSetIMValues(
     XIM			 xim,
     XIMArg		*arg)
@@ -1378,7 +1378,7 @@
 }
 
 #ifdef XIM_CONNECTABLE
-Private char *
+XPrivate char *
 _XimDelayModeGetIMValues(
     Xim			 im,
     XIMArg		*arg)
@@ -1391,7 +1391,7 @@
 }
 #endif /* XIM_CONNECTABLE */
 
-Private Bool
+XPrivate Bool
 _XimGetIMValuesCheck(
     Xim          im,
     INT16        len,
@@ -1415,7 +1415,7 @@
     return False;
 }
 
-Private char *
+XPrivate char *
 _XimProtoGetIMValues(
     XIM			 xim,
     XIMArg		*arg)
@@ -1527,7 +1527,7 @@
 	return makeid_name;
 }
 
-Private XIMMethodsRec     im_methods = {
+XPrivate XIMMethodsRec     im_methods = {
     _XimProtoCloseIM,           /* close */
     _XimProtoSetIMValues,       /* set_values */
     _XimProtoGetIMValues,       /* get_values */
@@ -1537,7 +1537,7 @@
     _Ximctstoutf8		/* ctstoutf8 */
 };
 
-Private Bool
+XPrivate Bool
 _XimSetEncodingByName(
     Xim		  im,
     char	**buf,
@@ -1570,7 +1570,7 @@
     return True;
 }
 
-Private Bool
+XPrivate Bool
 _XimSetEncodingByDetail(
     Xim		 im,
     char	**buf,
@@ -1581,7 +1581,7 @@
     return True;
 }
 
-Private Bool
+XPrivate Bool
 _XimGetEncoding(
     Xim		 im,
     CARD16	*buf,
@@ -1670,7 +1670,7 @@
     return True;
 }
 
-Private	Bool
+XPrivate	Bool
 _XimEncodingNegoCheck(
     Xim		 im,
     INT16	 len,
@@ -1694,7 +1694,7 @@
     return False;
 }
 
-Private Bool
+XPrivate Bool
 _XimEncodingNegotiation(
     Xim		 im)
 {
@@ -1801,7 +1801,7 @@
 }
 
 #ifdef XIM_CONNECTABLE
-Private Bool
+XPrivate Bool
 _XimSendSavedIMValues(
     Xim			 im)
 {
@@ -1911,7 +1911,7 @@
     return True;
 }
 
-Private void
+XPrivate void
 _XimDelayModeIMFree(
     Xim		 im)
 {
@@ -1934,7 +1934,7 @@
     return;
 }
 
-Public Bool
+XPublic Bool
 _XimConnectServer(
     Xim		 im)
 {
@@ -1958,7 +1958,7 @@
     return False;
 }
 
-Public Bool
+XPublic Bool
 _XimDelayModeSetAttr(
     Xim			 im)
 {
@@ -1990,7 +1990,7 @@
     return True;
 }
 
-Private Bool
+XPrivate Bool
 _XimReconnectModeSetAttr(
     Xim			 im)
 {
@@ -2017,7 +2017,7 @@
 }
 #endif /* XIM_CONNECTABLE */
 
-Public Bool
+XPublic Bool
 _XimProtoOpenIM(
     Xim		 im)
 {
diff -ruBN libX11-1.3.6/modules/im/ximcp/imDefLkup.c libX11-1.3.6-a/modules/im/ximcp/imDefLkup.c
--- libX11-1.3.6/modules/im/ximcp/imDefLkup.c	2010-08-24 16:16:11.000000000 +0800
+++ libX11-1.3.6-a/modules/im/ximcp/imDefLkup.c	2014-01-13 12:02:34.183182400 +0800
@@ -35,7 +35,7 @@
 #include "Xlcint.h"
 #include "Ximint.h"
 
-Public Xic
+XPublic Xic
 _XimICOfXICID(
     Xim		  im,
     XICID	  icid)
@@ -49,7 +49,7 @@
     return (Xic)0;
 }
 
-Private void
+XPrivate void
 _XimProcIMSetEventMask(
     Xim		 im,
     XPointer	 buf)
@@ -61,7 +61,7 @@
     return;
 }
 
-Private void
+XPrivate void
 _XimProcICSetEventMask(
     Xic		 ic,
     XPointer	 buf)
@@ -74,7 +74,7 @@
     return;
 }
 
-Public Bool
+XPublic Bool
 _XimSetEventMaskCallback(
     Xim		 xim,
     INT16	 len,
@@ -99,7 +99,7 @@
     return False;
 }
 
-Private Bool
+XPrivate Bool
 _XimSyncCheck(
     Xim          im,
     INT16        len,
@@ -128,7 +128,7 @@
     return False;
 }
 
-Public Bool
+XPublic Bool
 _XimSync(
     Xim		 im,
     Xic		 ic)
@@ -186,7 +186,7 @@
     return True;
 }
 
-Public Bool
+XPublic Bool
 _XimProcSyncReply(
     Xim		 im,
     Xic		 ic)
@@ -209,7 +209,7 @@
     return True;
 }
 
-Public Bool
+XPublic Bool
 _XimRespSyncReply(
     Xic		 ic,
     BITMASK16	 mode)
@@ -224,7 +224,7 @@
     return True;
 }
 
-Public Bool
+XPublic Bool
 _XimSyncCallback(
     Xim		 xim,
     INT16	 len,
@@ -245,7 +245,7 @@
     return False;
 }
 
-Private INT16
+XPrivate INT16
 _XimSetEventToWire(
     XEvent	*ev,
     xEvent	*event)
@@ -257,7 +257,7 @@
     return sz_xEvent;
 }
 
-Private Bool
+XPrivate Bool
 _XimForwardEventCore(
     Xic		 ic,
     XEvent	*ev,
@@ -329,7 +329,7 @@
     return True;
 }
 
-Public Bool
+XPublic Bool
 _XimForwardEvent(
     Xic		 ic,
     XEvent	*ev,
@@ -343,7 +343,7 @@
     return _XimForwardEventCore(ic, ev, sync);
 }
 
-Private void
+XPrivate void
 _XimProcEvent(
     Display		*d,
     Xic			 ic,
@@ -361,7 +361,7 @@
     return;
 }
 
-Private Bool
+XPrivate Bool
 _XimForwardEventRecv(
     Xim		 im,
     Xic		 ic,
@@ -380,7 +380,7 @@
     return True;
 }
 
-Public Bool
+XPublic Bool
 _XimForwardEventCallback(
     Xim		 xim,
     INT16	 len,
@@ -401,7 +401,7 @@
     return False;
 }
 
-Private Bool
+XPrivate Bool
 _XimRegisterTriggerkey(
     Xim			 im,
     XPointer		 buf)
@@ -448,7 +448,7 @@
     return True;
 }
 
-Public Bool
+XPublic Bool
 _XimRegisterTriggerKeysCallback(
     Xim		 xim,
     INT16	 len,
@@ -462,7 +462,7 @@
     return True;
 }
 
-Public EVENTMASK
+XPublic EVENTMASK
 _XimGetWindowEventmask(
     Xic		 ic)
 {
@@ -475,7 +475,7 @@
 }
 
 
-Private Bool
+XPrivate Bool
 _XimTriggerNotifyCheck(
     Xim          im,
     INT16        len,
@@ -504,7 +504,7 @@
     return False;
 }
 
-Public Bool
+XPublic Bool
 _XimTriggerNotify(
     Xim		 im,
     Xic		 ic,
@@ -572,7 +572,7 @@
     return True;
 }
 
-Private Bool
+XPrivate Bool
 _XimRegCommitInfo(
     Xic			 ic,
     char		*string,
@@ -593,7 +593,7 @@
     return True;
 }
 
-Private void
+XPrivate void
 _XimUnregCommitInfo(
     Xic			ic)
 {
@@ -611,7 +611,7 @@
     return;
 }
 
-Public void
+XPublic void
 _XimFreeCommitInfo(
     Xic			ic)
 {
@@ -620,7 +620,7 @@
     return;
 }
 
-Private Bool
+XPrivate Bool
 _XimProcKeySym(
     Xic			  ic,
     CARD32		  sym,
@@ -640,7 +640,7 @@
     return True;
 }
 
-Private Bool
+XPrivate Bool
 _XimProcCommit(
     Xic		  ic,
     BYTE	 *buf,
@@ -664,7 +664,7 @@
     return True;
 }
 
-Private Bool
+XPrivate Bool
 _XimCommitRecv(
     Xim		 im,
     Xic		 ic,
@@ -721,7 +721,7 @@
     return True;
 }
 
-Public Bool
+XPublic Bool
 _XimCommitCallback(
     Xim		 xim,
     INT16	 len,
@@ -742,7 +742,7 @@
     return False;
 }
 
-Public void
+XPublic void
 _XimProcError(
     Xim		 im,
     Xic		 ic,
@@ -751,7 +751,7 @@
     return;
 }
 
-Public Bool
+XPublic Bool
 _XimErrorCallback(
     Xim		 xim,
     INT16	 len,
@@ -780,7 +780,7 @@
     return True;
 }
 
-Public Bool
+XPublic Bool
 _XimError(
     Xim		 im,
     Xic		 ic,
@@ -824,7 +824,7 @@
     return True;
 }
 
-Private int
+XPrivate int
 _Ximctsconvert(
     XlcConv	 conv,
     char	*from,
@@ -890,7 +890,7 @@
     return to_cnvlen;
 }
 
-Public int
+XPublic int
 _Ximctstombs(XIM xim, char *from, int from_len,
 	     char *to, int to_len, Status *state)
 {
@@ -898,7 +898,7 @@
 			  from, from_len, to, to_len, state);
 }
 
-Public int
+XPublic int
 _Ximctstowcs(
     XIM		 xim,
     char	*from,
@@ -966,7 +966,7 @@
     return to_cnvlen;
 }
 
-Public int
+XPublic int
 _Ximctstoutf8(
     XIM		 xim,
     char	*from,
@@ -979,7 +979,7 @@
 			  from, from_len, to, to_len, state);
 }
 
-Public int
+XPublic int
 _XimProtoMbLookupString(
     XIC			 xic,
     XKeyEvent		*ev,
@@ -1042,7 +1042,7 @@
     return ret;
 }
 
-Public int
+XPublic int
 _XimProtoWcLookupString(
     XIC			 xic,
     XKeyEvent		*ev,
@@ -1105,7 +1105,7 @@
     return ret;
 }
 
-Public int
+XPublic int
 _XimProtoUtf8LookupString(
     XIC			 xic,
     XKeyEvent		*ev,
diff -ruBN libX11-1.3.6/modules/im/ximcp/imDispch.c libX11-1.3.6-a/modules/im/ximcp/imDispch.c
--- libX11-1.3.6/modules/im/ximcp/imDispch.c	2010-06-05 01:42:29.000000000 +0800
+++ libX11-1.3.6-a/modules/im/ximcp/imDispch.c	2014-01-13 12:02:34.199782900 +0800
@@ -36,7 +36,7 @@
 #include "Ximint.h"
 
 
-Public Bool
+XPublic Bool
 _XimRegProtoIntrCallback(
     Xim		 im,
     CARD16	 major_code,
@@ -60,7 +60,7 @@
     return True;
 }
 
-Public void
+XPublic void
 _XimFreeProtoIntrCallback(Xim im)
 {
     register XimProtoIntrRec *rec, *next;
@@ -74,7 +74,7 @@
     return;
 }
 
-Private Bool
+XPrivate Bool
 _XimTransportIntr(
     Xim		 im,
     INT16	 len,
@@ -95,7 +95,7 @@
     return False;
 }
 
-Public Bool
+XPublic Bool
 _XimDispatchInit(Xim im)
 {
     if (_XimRegisterDispatcher(im, _XimTransportIntr, (XPointer)im))
diff -ruBN libX11-1.3.6/modules/im/ximcp/imExten.c libX11-1.3.6-a/modules/im/ximcp/imExten.c
--- libX11-1.3.6/modules/im/ximcp/imExten.c	2010-08-24 16:16:11.000000000 +0800
+++ libX11-1.3.6-a/modules/im/ximcp/imExten.c	2014-01-13 12:02:34.261302400 +0800
@@ -56,7 +56,7 @@
     int		 idx;
 } XIM_QueryExtRec;
 
-Private XIM_QueryExtRec	extensions[] = {
+XPrivate XIM_QueryExtRec	extensions[] = {
 	{False, "XIM_EXT_SET_EVENT_MASK", 0, 0, 0,
 					XIM_EXT_SET_EVENT_MASK_IDX},
 #ifdef EXT_FORWARD
@@ -69,7 +69,7 @@
 	{False, NULL, 0, 0, 0, 0}		/* dummy */
 };
 
-Private int
+XPrivate int
 _XimIsSupportExt(
     int		 idx)
 {
@@ -87,7 +87,7 @@
     return -1;
 }
 
-Private Bool
+XPrivate Bool
 _XimProcExtSetEventMask(
     Xim		 im,
     Xic		 ic,
@@ -114,7 +114,7 @@
     return True;
 }
 
-Private Bool
+XPrivate Bool
 _XimExtSetEventMaskCallback(
     Xim		 xim,
     INT16	 len,
@@ -136,7 +136,7 @@
 }
 
 #ifdef EXT_FORWARD
-Private Bool
+XPrivate Bool
 _XimProcExtForwardKeyEvent(
     Xim		 im,
     Xic		 ic,
@@ -165,7 +165,7 @@
     return True;
 }
 
-Private Bool
+XPrivate Bool
 _XimExtForwardKeyEventCallback(
     Xim		 xim,
     INT16	 len,
@@ -186,7 +186,7 @@
     return False;
 }
 
-Private Bool
+XPrivate Bool
 _XimExtForwardKeyEventCheck(
     Xim          im,
     INT16        len,
@@ -214,7 +214,7 @@
     return False;
 }
 
-Public Bool
+XPublic Bool
 _XimExtForwardKeyEvent(
     Xic		 ic,
     XKeyEvent	*ev,
@@ -296,7 +296,7 @@
 }
 #endif /* EXT_FORWARD */
 
-Private int
+XPrivate int
 _XimCheckExtensionListSize(void)
 {
     register int i;
@@ -313,7 +313,7 @@
     return total;
 }
 
-Private void
+XPrivate void
 _XimSetExtensionList(
     CARD8	*buf)
 {
@@ -331,7 +331,7 @@
     return;
 }
 
-Private unsigned int
+XPrivate unsigned int
 _XimCountNumberOfExtension(
     INT16	 total,
     CARD8	*ext)
@@ -353,7 +353,7 @@
     return n;
 }
 
-Private Bool
+XPrivate Bool
 _XimParseExtensionList(
     Xim			 im,
     CARD16		*data)
@@ -389,7 +389,7 @@
     return True;
 }
 
-Private Bool
+XPrivate Bool
 _XimQueryExtensionCheck(
     Xim          im,
     INT16        len,
@@ -413,7 +413,7 @@
     return False;
 }
 
-Public Bool
+XPublic Bool
 _XimExtension(
     Xim		 im)
 {
@@ -519,7 +519,7 @@
 /* length of XPoint attribute */
 #define	XIM_Xpoint_length	12
 
-Private Bool
+XPrivate Bool
 _XimExtMove(
     Xim		 im,
     Xic		 ic,
@@ -552,7 +552,7 @@
     return True;
 }
 
-Public BITMASK32
+XPublic BITMASK32
 _XimExtenArgCheck(
     XIMArg	*arg)
 {
@@ -562,7 +562,7 @@
     return flag;
 }
 
-Public Bool
+XPublic Bool
 _XimExtenMove(
     Xim		 im,
     Xic		 ic,
diff -ruBN libX11-1.3.6/modules/im/ximcp/imImSw.c libX11-1.3.6-a/modules/im/ximcp/imImSw.c
--- libX11-1.3.6/modules/im/ximcp/imImSw.c	2010-06-05 01:42:29.000000000 +0800
+++ libX11-1.3.6-a/modules/im/ximcp/imImSw.c	2014-01-13 12:02:34.276926400 +0800
@@ -40,7 +40,7 @@
 #include "Ximint.h"
 #include "XimImSw.h"
 
-Private Bool
+XPrivate Bool
 _XimCheckIfDefault(
     Xim		im)
 {
diff -ruBN libX11-1.3.6/modules/im/ximcp/imInsClbk.c libX11-1.3.6-a/modules/im/ximcp/imInsClbk.c
--- libX11-1.3.6/modules/im/ximcp/imInsClbk.c	2010-08-24 16:16:11.000000000 +0800
+++ libX11-1.3.6-a/modules/im/ximcp/imInsClbk.c	2014-01-13 12:02:34.297432900 +0800
@@ -53,11 +53,11 @@
 } XimInstCallbackRec, *XimInstCallback;
 
 
-Private XimInstCallback	callback_list	= NULL;
-Private Bool		lock		= False;
+XPrivate XimInstCallback	callback_list	= NULL;
+XPrivate Bool		lock		= False;
 
 
-Private void
+XPrivate void
 MakeLocale( XLCd lcd, char locale[] )
 {
     char	*language, *territory, *codeset;
@@ -77,7 +77,7 @@
 }
 
 
-Private Bool
+XPrivate Bool
 _XimFilterPropertyNotify(
     Display	*display,
     Window	 window,
@@ -151,7 +151,7 @@
 }
 
 
-Public Bool
+XPublic Bool
 _XimRegisterIMInstantiateCallback(
     XLCd	 lcd,
     Display	*display,
@@ -214,7 +214,7 @@
 }
 
 
-Public Bool
+XPublic Bool
 _XimUnRegisterIMInstantiateCallback(
     XLCd	 lcd,
     Display	*display,
@@ -268,7 +268,7 @@
 }
 
 
-Public void
+XPublic void
 _XimResetIMInstantiateCallback(Xim xim)
 {
     char		 locale[XIM_MAXLCNAMELEN];
diff -ruBN libX11-1.3.6/modules/im/ximcp/imInt.c libX11-1.3.6-a/modules/im/ximcp/imInt.c
--- libX11-1.3.6/modules/im/ximcp/imInt.c	2010-06-05 01:42:29.000000000 +0800
+++ libX11-1.3.6-a/modules/im/ximcp/imInt.c	2014-01-13 12:02:34.329657400 +0800
@@ -37,10 +37,10 @@
 #include "Ximint.h"
 #include "XimImSw.h"
 
-Private Xim 		*_XimCurrentIMlist  = (Xim *)NULL;
-Private int		 _XimCurrentIMcount = 0;
+XPrivate Xim 		*_XimCurrentIMlist  = (Xim *)NULL;
+XPrivate int		 _XimCurrentIMcount = 0;
 
-Private Bool
+XPrivate Bool
 _XimSetIMStructureList(
     Xim		  im)
 {
@@ -72,7 +72,7 @@
     return True;
 }
 
-Public void
+XPublic void
 _XimDestroyIMStructureList(Xim im)
 {
     register int  i;
@@ -86,7 +86,7 @@
     return;
 }
 
-Public void
+XPublic void
 _XimServerDestroy(Xim im_2_destroy)
 {
     register int  i;
@@ -120,7 +120,7 @@
 }
 
 #ifdef XIM_CONNECTABLE
-Public void
+XPublic void
 _XimServerReconectableDestroy(void)
 {
     register int  i;
@@ -147,7 +147,7 @@
 }
 #endif /* XIM_CONNECTABLE */
 
-Private const char *
+XPrivate const char *
 _XimStrstr(
     register const char *src,
     register const char *dest)
@@ -163,7 +163,7 @@
     return NULL;
 }
 
-Private char *
+XPrivate char *
 _XimMakeImName(
     XLCd	   lcd)
 {
@@ -193,7 +193,7 @@
     return ret;
 }
 
-Public XIM
+XPublic XIM
 _XimOpenIM(
     XLCd		 lcd,
     Display		*dpy,
@@ -254,7 +254,7 @@
     return NULL;
 }
 
-Public Bool
+XPublic Bool
 _XInitIM(XLCd lcd)
 {
     if(lcd == (XLCd)NULL)
diff -ruBN libX11-1.3.6/modules/im/ximcp/imLcGIc.c libX11-1.3.6-a/modules/im/ximcp/imLcGIc.c
--- libX11-1.3.6/modules/im/ximcp/imLcGIc.c	2010-08-24 16:16:11.000000000 +0800
+++ libX11-1.3.6-a/modules/im/ximcp/imLcGIc.c	2014-01-13 12:02:34.368717400 +0800
@@ -34,7 +34,7 @@
 #include "Xlcint.h"
 #include "Ximint.h"
 
-Public char *
+XPublic char *
 _XimLocalGetICValues(XIC xic, XIMArg *values)
 {
     Xic			 ic = (Xic)xic;
diff -ruBN libX11-1.3.6/modules/im/ximcp/imLcIc.c libX11-1.3.6-a/modules/im/ximcp/imLcIc.c
--- libX11-1.3.6/modules/im/ximcp/imLcIc.c	2010-06-05 01:42:29.000000000 +0800
+++ libX11-1.3.6-a/modules/im/ximcp/imLcIc.c	2014-01-13 12:02:34.381411900 +0800
@@ -36,7 +36,7 @@
 #include "Xlcint.h"
 #include "Ximint.h"
 
-Private void
+XPrivate void
 _XimLocalUnSetFocus(
     XIC	 xic)
 {
@@ -49,7 +49,7 @@
     return;
 }
 
-Private void
+XPrivate void
 _XimLocalDestroyIC(
     XIC	 xic)
 {
@@ -68,7 +68,7 @@
     return;
 }
 
-Private void
+XPrivate void
 _XimLocalSetFocus(
     XIC	 xic)
 {
@@ -90,7 +90,7 @@
     return;
 }
 
-Private void
+XPrivate void
 _XimLocalReset(
     XIC	 xic)
 {
@@ -102,7 +102,7 @@
     ic->private.local.brl_committed  = 0;
 }
 
-Private char *
+XPrivate char *
 _XimLocalMbReset(
     XIC	 xic)
 {
@@ -110,7 +110,7 @@
     return (char *)NULL;
 }
 
-Private wchar_t *
+XPrivate wchar_t *
 _XimLocalWcReset(
     XIC	 xic)
 {
@@ -118,7 +118,7 @@
     return (wchar_t *)NULL;
 }
 
-Private XICMethodsRec Local_ic_methods = {
+XPrivate XICMethodsRec Local_ic_methods = {
     _XimLocalDestroyIC, 	/* destroy */
     _XimLocalSetFocus,  	/* set_focus */
     _XimLocalUnSetFocus,	/* unset_focus */
@@ -132,7 +132,7 @@
     _XimLocalUtf8LookupString	/* utf8_lookup_string */
 };
 
-Public XIC
+XPublic XIC
 _XimLocalCreateIC(
     XIM			 im,
     XIMArg		*values)
diff -ruBN libX11-1.3.6/modules/im/ximcp/imLcIm.c libX11-1.3.6-a/modules/im/ximcp/imLcIm.c
--- libX11-1.3.6/modules/im/ximcp/imLcIm.c	2010-06-05 01:42:29.000000000 +0800
+++ libX11-1.3.6-a/modules/im/ximcp/imLcIm.c	2014-01-13 12:02:34.410706900 +0800
@@ -86,14 +86,14 @@
     /* char encoding[1] */
 };
 
-Private struct  _XimCacheStruct* _XimCache_mmap = NULL;
-Private DefTreeBase _XimCachedDefaultTreeBase;
-Private int     _XimCachedDefaultTreeRefcount = 0;
+XPrivate struct  _XimCacheStruct* _XimCache_mmap = NULL;
+XPrivate DefTreeBase _XimCachedDefaultTreeBase;
+XPrivate int     _XimCachedDefaultTreeRefcount = 0;
 
 #endif
 
 
-Public Bool
+XPublic Bool
 _XimCheckIfLocalProcessing(Xim im)
 {
     FILE        *fp;
@@ -117,7 +117,7 @@
     return(False);
 }
 
-Private void
+XPrivate void
 XimFreeDefaultTree(
     DefTreeBase *b)
 {
@@ -144,7 +144,7 @@
     b->utf8used = b->utf8size = 0;
 }
 
-Public void
+XPublic void
 _XimLocalIMFree(
     Xim		im)
 {
@@ -218,7 +218,7 @@
     return;
 }
 
-Private Status
+XPrivate Status
 _XimLocalCloseIM(
     XIM		xim)
 {
@@ -239,7 +239,7 @@
     return(True);
 }
 
-Public char *
+XPublic char *
 _XimLocalGetIMValues(
     XIM			 xim,
     XIMArg		*values)
@@ -252,7 +252,7 @@
 			im->core.im_resources, im->core.im_num_resources));
 }
 
-Public char *
+XPublic char *
 _XimLocalSetIMValues(
     XIM			 xim,
     XIMArg		*values)
@@ -271,7 +271,7 @@
 
 #ifdef COMPOSECACHE
 
-Private Bool
+XPrivate Bool
 _XimReadCachedDefaultTree(
     int          fd_cache,
     const char  *name,
@@ -322,7 +322,7 @@
     return True;
 }
 
-Private unsigned int strToHash (
+XPrivate unsigned int strToHash (
     const char *name)
 {
     unsigned int hash = 0;
@@ -334,7 +334,7 @@
 
 /* Returns read-only fd of cache file, -1 if none.
  * Sets *res to cache filename if safe. Sets *size to file size of cache. */
-Private int _XimCachedFileName (
+XPrivate int _XimCachedFileName (
     const char *dir, const char *name,
     const char *intname, const char *encoding,
     uid_t uid, int isglobal, char **res, off_t *size)
@@ -419,7 +419,7 @@
 }
 
 
-Private Bool _XimLoadCache (
+XPrivate Bool _XimLoadCache (
     int         fd,
     const char *name,
     const char *encoding,
@@ -439,7 +439,7 @@
 }
 
 
-Private void
+XPrivate void
 _XimWriteCachedDefaultTree(
     const char *name,
     const char *encoding,
@@ -511,7 +511,7 @@
 #endif
 
 
-Private void
+XPrivate void
 _XimCreateDefaultTree(
     Xim		im)
 {
@@ -641,7 +641,7 @@
 	Xfree (cachename);
 }
 
-Private XIMMethodsRec      Xim_im_local_methods = {
+XPrivate XIMMethodsRec      Xim_im_local_methods = {
     _XimLocalCloseIM,           /* close */
     _XimLocalSetIMValues,       /* set_values */
     _XimLocalGetIMValues,       /* get_values */
@@ -651,7 +651,7 @@
     _XimLcctstoutf8		/* ctstoutf8 */
 };
 
-Public Bool
+XPublic Bool
 _XimLocalOpenIM(
     Xim			 im)
 {
diff -ruBN libX11-1.3.6/modules/im/ximcp/imLcLkup.c libX11-1.3.6-a/modules/im/ximcp/imLcLkup.c
--- libX11-1.3.6/modules/im/ximcp/imLcLkup.c	2010-06-05 01:42:29.000000000 +0800
+++ libX11-1.3.6-a/modules/im/ximcp/imLcLkup.c	2014-01-13 12:02:34.433166400 +0800
@@ -43,7 +43,7 @@
 #include "XlcPubI.h"
 #include "Ximint.h"
 
-Public int
+XPublic int
 _XimLocalMbLookupString(XIC xic, XKeyEvent *ev, char *buffer, int bytes,
 			KeySym *keysym, Status *status)
 {
@@ -117,7 +117,7 @@
     return (ret);
 }
 
-Public int
+XPublic int
 _XimLocalWcLookupString(XIC xic, XKeyEvent *ev, wchar_t *buffer, int wlen,
 			KeySym *keysym, Status *status)
 {
@@ -189,7 +189,7 @@
     return (ret);
 }
 
-Public int
+XPublic int
 _XimLocalUtf8LookupString(XIC xic, XKeyEvent *ev, char *buffer, int bytes,
 			  KeySym *keysym, Status *status)
 {
@@ -257,7 +257,7 @@
     return (ret);
 }
 
-Private int
+XPrivate int
 _XimLcctsconvert(
     XlcConv	 conv,
     char	*from,
@@ -323,7 +323,7 @@
     return to_cnvlen;
 }
 
-Public int
+XPublic int
 _XimLcctstombs(XIM xim, char *from, int from_len,
 	       char *to, int to_len, Status *state)
 {
@@ -331,7 +331,7 @@
 			    from, from_len, to, to_len, state);
 }
 
-Public int
+XPublic int
 _XimLcctstowcs(XIM xim, char *from, int from_len,
 	       wchar_t *to, int to_len, Status *state)
 {
@@ -394,7 +394,7 @@
     return to_cnvlen;
 }
 
-Public int
+XPublic int
 _XimLcctstoutf8(XIM xim, char *from, int from_len,
 		char *to, int to_len, Status *state)
 {
diff -ruBN libX11-1.3.6/modules/im/ximcp/imLcSIc.c libX11-1.3.6-a/modules/im/ximcp/imLcSIc.c
--- libX11-1.3.6/modules/im/ximcp/imLcSIc.c	2010-06-05 01:42:29.000000000 +0800
+++ libX11-1.3.6-a/modules/im/ximcp/imLcSIc.c	2014-01-13 12:02:34.478085400 +0800
@@ -37,7 +37,7 @@
 #include "Xlcint.h"
 #include "Ximint.h"
 
-Public char *
+XPublic char *
 _XimLocalSetICValues(XIC xic, XIMArg *values)
 {
     XimDefICValues	 ic_values;
diff -ruBN libX11-1.3.6/modules/im/ximcp/imRm.c libX11-1.3.6-a/modules/im/ximcp/imRm.c
--- libX11-1.3.6/modules/im/ximcp/imRm.c	2010-06-05 01:42:29.000000000 +0800
+++ libX11-1.3.6-a/modules/im/ximcp/imRm.c	2014-01-13 12:02:34.564017400 +0800
@@ -58,7 +58,7 @@
 } XimValueOffsetInfoRec, *XimValueOffsetInfo;
 
 #ifdef XIM_CONNECTABLE
-Private Bool
+XPrivate Bool
 _XimCheckBool(str)
     char	*str;
 {
@@ -69,7 +69,7 @@
     return False;
 }
 
-Public void
+XPublic void
 _XimSetProtoResource(im)
     Xim		 im;
 {
@@ -344,7 +344,7 @@
     0						/* dummy */
 };
 
-Private  Bool
+XPrivate  Bool
 _XimDefaultStyles(
     XimValueOffsetInfo	  info,
     XPointer	 	  top,
@@ -380,7 +380,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimDefaultIMValues(
     XimValueOffsetInfo	  info,
     XPointer	 	  top,
@@ -417,7 +417,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimDefaultICValues(
     XimValueOffsetInfo	  info,
     XPointer	 	  top,
@@ -454,7 +454,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimDefaultVisiblePos(
     XimValueOffsetInfo	  info,
     XPointer	 	  top,
@@ -468,7 +468,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimDefaultFocusWindow(
     XimValueOffsetInfo	 info,
     XPointer	 	 top,
@@ -487,7 +487,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimDefaultResName(
     XimValueOffsetInfo	  info,
     XPointer	 	  top,
@@ -507,7 +507,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimDefaultResClass(
     XimValueOffsetInfo	   info,
     XPointer	 	   top,
@@ -527,7 +527,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimDefaultDestroyCB(
     XimValueOffsetInfo	  info,
     XPointer	 	  top,
@@ -543,7 +543,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimDefaultResetState(
     XimValueOffsetInfo	  info,
     XPointer	 	  top,
@@ -557,7 +557,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimDefaultHotKeyState(
     XimValueOffsetInfo	  info,
     XPointer	 	  top,
@@ -571,7 +571,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimDefaultArea(
     XimValueOffsetInfo	 info,
     XPointer	 	 top,
@@ -607,7 +607,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimDefaultColormap(
     XimValueOffsetInfo	 info,
     XPointer	 	 top,
@@ -632,7 +632,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimDefaultStdColormap(
     XimValueOffsetInfo	 info,
     XPointer	 	 top,
@@ -646,7 +646,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimDefaultFg(
     XimValueOffsetInfo	 info,
     XPointer	 	 top,
@@ -664,7 +664,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimDefaultBg(
     XimValueOffsetInfo	 info,
     XPointer	 	 top,
@@ -682,7 +682,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimDefaultBgPixmap(
     XimValueOffsetInfo	 info,
     XPointer	 	 top,
@@ -696,7 +696,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimDefaultFontSet(
     XimValueOffsetInfo	 info,
     XPointer	 	 top,
@@ -710,7 +710,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimDefaultLineSpace(
     XimValueOffsetInfo	 info,
     XPointer	 	 top,
@@ -739,7 +739,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimDefaultCursor(
     XimValueOffsetInfo	 info,
     XPointer	 	 top,
@@ -753,7 +753,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimDefaultPreeditState(
     XimValueOffsetInfo	 info,
     XPointer	 	 top,
@@ -767,7 +767,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimDefaultNest(
     XimValueOffsetInfo	 info,
     XPointer	 	 top,
@@ -777,7 +777,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimEncodeCallback(
     XimValueOffsetInfo	 info,
     XPointer	 	 top,
@@ -790,7 +790,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimEncodeString(
     XimValueOffsetInfo	  info,
     XPointer	 	  top,
@@ -818,7 +818,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimEncodeStyle(
     XimValueOffsetInfo	 info,
     XPointer	 	 top,
@@ -831,7 +831,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimEncodeWindow(
     XimValueOffsetInfo	 info,
     XPointer	 	 top,
@@ -844,7 +844,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimEncodeStringConv(
     XimValueOffsetInfo		 info,
     XPointer		 	 top,
@@ -856,7 +856,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimEncodeResetState(
     XimValueOffsetInfo	 info,
     XPointer	 	 top,
@@ -869,7 +869,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimEncodeHotKey(
     XimValueOffsetInfo	  info,
     XPointer	 	  top,
@@ -912,7 +912,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimEncodeHotKetState(
     XimValueOffsetInfo	 info,
     XPointer	 	 top,
@@ -925,7 +925,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimEncodeRectangle(
     XimValueOffsetInfo	 info,
     XPointer	 	 top,
@@ -938,7 +938,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimEncodeSpot(
     XimValueOffsetInfo	 info,
     XPointer	 	 top,
@@ -951,7 +951,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimEncodeColormap(
     XimValueOffsetInfo	 info,
     XPointer	 	 top,
@@ -964,7 +964,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimEncodeStdColormap(
     XimValueOffsetInfo	 info,
     XPointer	 	 top,
@@ -977,7 +977,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimEncodeLong(
     XimValueOffsetInfo	 info,
     XPointer	 	 top,
@@ -990,7 +990,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimEncodeBgPixmap(
     XimValueOffsetInfo	 info,
     XPointer	 	 top,
@@ -1003,7 +1003,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimEncodeFontSet(
     XimValueOffsetInfo	 info,
     XPointer	 	 top,
@@ -1016,7 +1016,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimEncodeLineSpace(
     XimValueOffsetInfo	 info,
     XPointer	 	 top,
@@ -1029,7 +1029,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimEncodeCursor(
     XimValueOffsetInfo	 info,
     XPointer	 	 top,
@@ -1042,7 +1042,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimEncodePreeditState(
     XimValueOffsetInfo	 info,
     XPointer	 	 top,
@@ -1055,7 +1055,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimEncodeNest(
     XimValueOffsetInfo	 info,
     XPointer	 	 top,
@@ -1064,7 +1064,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimDecodeStyles(
     XimValueOffsetInfo	 info,
     XPointer	 	 top,
@@ -1103,7 +1103,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimDecodeValues(
     XimValueOffsetInfo	 info,
     XPointer	 	 top,
@@ -1142,7 +1142,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimDecodeCallback(
     XimValueOffsetInfo	 info,
     XPointer	 	 top,
@@ -1162,7 +1162,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimDecodeString(
     XimValueOffsetInfo	 info,
     XPointer	 	 top,
@@ -1187,7 +1187,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimDecodeBool(
     XimValueOffsetInfo	 info,
     XPointer	 	 top,
@@ -1200,7 +1200,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimDecodeStyle(
     XimValueOffsetInfo	 info,
     XPointer	 	 top,
@@ -1213,7 +1213,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimDecodeWindow(
     XimValueOffsetInfo	 info,
     XPointer	 	 top,
@@ -1226,7 +1226,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimDecodeStringConv(
     XimValueOffsetInfo	 info,
     XPointer	 	 top,
@@ -1238,7 +1238,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimDecodeResetState(
     XimValueOffsetInfo	 info,
     XPointer	 	 top,
@@ -1251,7 +1251,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimDecodeHotKey(
     XimValueOffsetInfo	 info,
     XPointer	 	 top,
@@ -1285,7 +1285,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimDecodeHotKetState(
     XimValueOffsetInfo	 info,
     XPointer	 	 top,
@@ -1298,7 +1298,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimDecodeRectangle(
     XimValueOffsetInfo	 info,
     XPointer	 	 top,
@@ -1316,7 +1316,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimDecodeSpot(
     XimValueOffsetInfo	 info,
     XPointer	 	 top,
@@ -1334,7 +1334,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimDecodeColormap(
     XimValueOffsetInfo	 info,
     XPointer	 	 top,
@@ -1347,7 +1347,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimDecodeStdColormap(
     XimValueOffsetInfo	 info,
     XPointer	 	 top,
@@ -1360,7 +1360,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimDecodeLong(
     XimValueOffsetInfo	 info,
     XPointer	 	 top,
@@ -1373,7 +1373,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimDecodeBgPixmap(
     XimValueOffsetInfo	 info,
     XPointer	 	 top,
@@ -1386,7 +1386,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimDecodeFontSet(
     XimValueOffsetInfo	 info,
     XPointer	 	 top,
@@ -1399,7 +1399,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimDecodeLineSpace(
     XimValueOffsetInfo	 info,
     XPointer	 	 top,
@@ -1412,7 +1412,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimDecodeCursor(
     XimValueOffsetInfo	 info,
     XPointer	 	 top,
@@ -1425,7 +1425,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimDecodePreeditState(
     XimValueOffsetInfo	 info,
     XPointer	 	 top,
@@ -1438,7 +1438,7 @@
     return True;
 }
 
-Private  Bool
+XPrivate  Bool
 _XimDecodeNest(
     XimValueOffsetInfo	 info,
     XPointer	 	 top,
@@ -2130,7 +2130,7 @@
 static XrmQuark im_mode_quark[sizeof(im_mode) / sizeof(im_mode[0])];
 static XrmQuark ic_mode_quark[sizeof(ic_mode) / sizeof(ic_mode[0])];
 
-Private Bool
+XPrivate Bool
 _XimSetResourceList(
     XIMResourceList	 *res_list,
     unsigned int	 *list_num,
@@ -2159,7 +2159,7 @@
     return True;
 }
 
-Public Bool
+XPublic Bool
 _XimSetIMResourceList(
     XIMResourceList	*res_list,
     unsigned int	*list_num)
@@ -2168,7 +2168,7 @@
 				im_resources, XIMNumber(im_resources), 100);
 }
 
-Public Bool
+XPublic Bool
 _XimSetICResourceList(
     XIMResourceList	*res_list,
     unsigned int	*list_num)
@@ -2177,7 +2177,7 @@
 				ic_resources, XIMNumber(ic_resources), 200);
 }
 
-Public Bool
+XPublic Bool
 _XimSetInnerIMResourceList(
     XIMResourceList	*res_list,
     unsigned int	*list_num)
@@ -2186,7 +2186,7 @@
 		im_inner_resources, XIMNumber(im_inner_resources), 100);
 }
 
-Public Bool
+XPublic Bool
 _XimSetInnerICResourceList(
     XIMResourceList	*res_list,
     unsigned int	*list_num)
@@ -2195,7 +2195,7 @@
 		ic_inner_resources, XIMNumber(ic_inner_resources), 200);
 }
 
-Private XIMResourceList
+XPrivate XIMResourceList
 _XimGetResourceListRecByMode(
     XIMResourceList	 res_list,
     unsigned int	 list_num,
@@ -2211,7 +2211,7 @@
     return (XIMResourceList)NULL;
 }
 
-Public Bool
+XPublic Bool
 _XimCheckCreateICValues(
     XIMResourceList	 res_list,
     unsigned int	 list_num)
@@ -2222,7 +2222,7 @@
     return False;
 }
 
-Public XIMResourceList
+XPublic XIMResourceList
 _XimGetResourceListRecByQuark(
     XIMResourceList	 res_list,
     unsigned int	 list_num,
@@ -2238,7 +2238,7 @@
     return (XIMResourceList)NULL;
 }
 
-Public XIMResourceList
+XPublic XIMResourceList
 _XimGetResourceListRec(
     XIMResourceList	 res_list,
     unsigned int	 list_num,
@@ -2249,7 +2249,7 @@
     return _XimGetResourceListRecByQuark(res_list, list_num, quark);
 }
 
-Public char *
+XPublic char *
 _XimSetIMValueData(
     Xim			 im,
     XPointer		 top,
@@ -2279,7 +2279,7 @@
     return NULL;
 }
 
-Public char *
+XPublic char *
 _XimGetIMValueData(
     Xim			 im,
     XPointer		 top,
@@ -2309,7 +2309,7 @@
     return NULL;
 }
 
-Public void
+XPublic void
 _XimSetIMMode(
     XIMResourceList	res_list,
     unsigned int	list_num)
@@ -2328,7 +2328,7 @@
     return;
 }
 
-Private int
+XPrivate int
 _XimCheckSetIMDefaultsMode(
     XIMResourceList	res)
 {
@@ -2338,7 +2338,7 @@
     return XIM_CHECK_INVALID;
 }
 
-Private int
+XPrivate int
 _XimCheckSetIMValuesMode(
     XIMResourceList	res)
 {
@@ -2348,7 +2348,7 @@
     return XIM_CHECK_INVALID;
 }
 
-Private int
+XPrivate int
  _XimCheckGetIMValuesMode(
     XIMResourceList	res)
 {
@@ -2358,7 +2358,7 @@
     return XIM_CHECK_INVALID;
 }
 
-Public int
+XPublic int
  _XimCheckIMMode(
     XIMResourceList	res,
     unsigned long	mode)
@@ -2377,7 +2377,7 @@
     }
 }
 
-Public void
+XPublic void
 _XimSetICMode(XIMResourceList res_list, unsigned int list_num, XIMStyle style)
 {
     XIMResourceList	res;
@@ -2419,7 +2419,7 @@
     return;
 }
 
-Private int
+XPrivate int
 _XimCheckSetICDefaultsMode(
     XIMResourceList	res,
     unsigned long	mode)
@@ -2462,7 +2462,7 @@
     return XIM_CHECK_VALID;
 }
 
-Private int
+XPrivate int
 _XimCheckCreateICMode(
     XIMResourceList	res,
     unsigned long	mode)
@@ -2515,7 +2515,7 @@
     return XIM_CHECK_VALID;
 }
 
-Private int
+XPrivate int
 _XimCheckSetICValuesMode(
     XIMResourceList	res,
     unsigned long	mode)
@@ -2556,7 +2556,7 @@
     return XIM_CHECK_VALID;
 }
 
-Private int
+XPrivate int
 _XimCheckGetICValuesMode(
     XIMResourceList	res,
     unsigned long	mode)
@@ -2591,7 +2591,7 @@
     return XIM_CHECK_VALID;
 }
 
-Public int
+XPublic int
  _XimCheckICMode(
     XIMResourceList     res,
     unsigned long       mode)
@@ -2609,7 +2609,7 @@
     }
 }
 
-Public Bool
+XPublic Bool
 _XimSetLocalIMDefaults(
     Xim			 im,
     XPointer		 top,
@@ -2648,7 +2648,7 @@
     return True;
 }
 
-Public Bool
+XPublic Bool
 _XimSetICDefaults(
     Xic			 ic,
     XPointer		 top,
@@ -2713,7 +2713,7 @@
     return True;
 }
 
-Private Bool
+XPrivate Bool
 _XimEncodeAttr(
     XimValueOffsetInfo	 info,
     unsigned int	 num,
@@ -2734,7 +2734,7 @@
     return False;
 }
 
-Public Bool
+XPublic Bool
 _XimEncodeLocalIMAttr(
     XIMResourceList	 res,
     XPointer		 top,
@@ -2744,7 +2744,7 @@
 					res, top, val);
 }
 
-Public Bool
+XPublic Bool
 _XimEncodeLocalICAttr(
     Xic			 ic,
     XIMResourceList	 res,
@@ -2769,7 +2769,7 @@
     return _XimEncodeAttr(info, num, res, top, arg->value);
 }
 
-Private Bool
+XPrivate Bool
 _XimEncodeLocalTopValue(
     Xic			 ic,
     XIMResourceList	 res,
@@ -2805,7 +2805,7 @@
     return True;
 }
 
-Private Bool
+XPrivate Bool
 _XimEncodeLocalPreeditValue(
     Xic			 ic,
     XIMResourceList	 res,
@@ -2825,7 +2825,7 @@
     return True;
 }
 
-Private Bool
+XPrivate Bool
 _XimEncodeLocalStatusValue(
     Xic			 ic,
     XIMResourceList	 res,
@@ -2845,7 +2845,7 @@
     return True;
 }
 
-Public char *
+XPublic char *
 _XimSetICValueData(
     Xic			 ic,
     XPointer		 top,
@@ -2910,7 +2910,7 @@
     return NULL;
 }
 
-Private Bool
+XPrivate Bool
 _XimCheckInputStyle(
     XIMStyles		*styles,
     XIMStyle		 style)
@@ -2926,7 +2926,7 @@
     return False;
 }
 
-Public Bool
+XPublic Bool
 _XimCheckLocalInputStyle(
     Xic			 ic,
     XPointer		 top,
@@ -2957,7 +2957,7 @@
     return False;
 }
 
-Private Bool
+XPrivate Bool
 _XimDecodeAttr(
     XimValueOffsetInfo	 info,
     unsigned int	 num,
@@ -2978,7 +2978,7 @@
     return False;
 }
 
-Public Bool
+XPublic Bool
 _XimDecodeLocalIMAttr(
     XIMResourceList	 res,
     XPointer		 top,
@@ -2988,7 +2988,7 @@
 					res, top, val);
 }
 
-Public Bool
+XPublic Bool
 _XimDecodeLocalICAttr(
     XIMResourceList	 res,
     XPointer		 top,
@@ -3012,7 +3012,7 @@
     return _XimDecodeAttr(info, num, res, top, val);
 }
 
-Public char *
+XPublic char *
 _XimGetICValueData(Xic ic, XPointer top, XIMResourceList res_list,
 		   unsigned int	 list_num, XIMArg *values, unsigned long mode)
 {
@@ -3061,7 +3061,7 @@
     return NULL;
 }
 
-Public void
+XPublic void
 _XimGetCurrentIMValues(Xim im, XimDefIMValues *im_values)
 {
     bzero((char *)im_values, sizeof(XimDefIMValues));
@@ -3075,7 +3075,7 @@
     im_values->visible_position	= im->core.visible_position;
 }
 
-Public void
+XPublic void
 _XimSetCurrentIMValues(Xim im, XimDefIMValues *im_values)
 {
     im->core.styles		= im_values->styles;
@@ -3087,7 +3087,7 @@
     im->core.visible_position	= im_values->visible_position;
 }
 
-Public void
+XPublic void
 _XimGetCurrentICValues(Xic ic, XimDefICValues *ic_values)
 {
     bzero((char *)ic_values, sizeof(XimDefICValues));
@@ -3110,7 +3110,7 @@
     ic_values->status_attr	 = ic->core.status_attr;
 }
 
-Public void
+XPublic void
 _XimSetCurrentICValues(
     Xic			 ic,
     XimDefICValues	*ic_values)
@@ -3134,7 +3134,7 @@
     ic->core.status_attr	= ic_values->status_attr;
 }
 
-Private void
+XPrivate void
 _XimInitialIMOffsetInfo(void)
 {
     unsigned int	 n = XIMNumber(im_attr_info);
@@ -3145,7 +3145,7 @@
     }
 }
 
-Private void
+XPrivate void
 _XimInitialICOffsetInfo(void)
 {
     unsigned int	 n;
@@ -3167,7 +3167,7 @@
     }
 }
 
-Private void
+XPrivate void
 _XimInitialIMMode(void)
 {
     unsigned int	n = XIMNumber(im_mode);
@@ -3178,7 +3178,7 @@
     }
 }
 
-Private void
+XPrivate void
 _XimInitialICMode(void)
 {
     unsigned int	n = XIMNumber(ic_mode);
@@ -3189,7 +3189,7 @@
     }
 }
 
-Public void
+XPublic void
 _XimInitialResourceInfo(void)
 {
     static Bool	init_flag = False;
diff -ruBN libX11-1.3.6/modules/im/ximcp/imRmAttr.c libX11-1.3.6-a/modules/im/ximcp/imRmAttr.c
--- libX11-1.3.6/modules/im/ximcp/imRmAttr.c	2010-06-05 01:42:29.000000000 +0800
+++ libX11-1.3.6-a/modules/im/ximcp/imRmAttr.c	2014-01-13 12:02:34.620654400 +0800
@@ -34,7 +34,7 @@
 #include "Ximint.h"
 
 
-Private XIMResourceList
+XPrivate XIMResourceList
 _XimGetNestedListSeparator(
     XIMResourceList	 res_list,		/* LISTofIMATTR or IMATTR */
     unsigned int	 res_num)
@@ -42,7 +42,7 @@
     return  _XimGetResourceListRec(res_list, res_num, XNSeparatorofNestedList);
 }
 
-Private Bool
+XPrivate Bool
 _XimCheckInnerIMAttributes(
     Xim			 im,
     XIMArg		*arg,
@@ -64,7 +64,7 @@
     return True;
 }
 
-Public char *
+XPublic char *
 _XimMakeIMAttrIDList(
     Xim			 im,
     XIMResourceList	 res_list,
@@ -102,7 +102,7 @@
     return (char *)NULL;
 }
 
-Private Bool
+XPrivate Bool
 _XimCheckInnerICAttributes(
     Xic			 ic,
     XIMArg		*arg,
@@ -124,7 +124,7 @@
     return True;
 }
 
-Public char *
+XPublic char *
 _XimMakeICAttrIDList(
     Xic			 ic,
     XIMResourceList	 res_list,
@@ -206,7 +206,7 @@
     return (char *)NULL;
 }
 
-Private Bool
+XPrivate Bool
 _XimAttributeToValue(
     Xic			  ic,
     XIMResourceList	  res,
@@ -395,7 +395,7 @@
     return True;
 }
 
-Private Bool
+XPrivate Bool
 _XimDecodeInnerIMATTRIBUTE(
     Xim			 im,
     XIMArg		*arg)
@@ -411,7 +411,7 @@
     return _XimDecodeLocalIMAttr(res, (XPointer)&im_values, arg->value);
 }
 
-Public char *
+XPublic char *
 _XimDecodeIMATTRIBUTE(
     Xim			 im,
     XIMResourceList	 res_list,
@@ -464,7 +464,7 @@
     return (char *)NULL;
 }
 
-Private Bool
+XPrivate Bool
 _XimDecodeInnerICATTRIBUTE(
     Xic			 ic,
     XIMArg		*arg,
@@ -484,7 +484,7 @@
     return True;
 }
 
-Public char *
+XPublic char *
 _XimDecodeICATTRIBUTE(
     Xic			 ic,
     XIMResourceList	 res_list,
@@ -560,7 +560,7 @@
     return (char *)NULL;
 }
 
-Private Bool
+XPrivate Bool
 _XimValueToAttribute(
     XIMResourceList	 res,
     XPointer		 buf,
@@ -768,7 +768,7 @@
     return True;
 }
 
-Private Bool
+XPrivate Bool
 _XimSetInnerIMAttributes(
     Xim			 im,
     XPointer		 top,
@@ -791,7 +791,7 @@
     return _XimEncodeLocalIMAttr(res, top, arg->value);
 }
 
-Public char *
+XPublic char *
 _XimEncodeIMATTRIBUTE(
     Xim			  im,
     XIMResourceList	  res_list,
@@ -855,7 +855,7 @@
 }
 
 #ifdef XIM_CONNECTABLE
-Public	Bool
+XPublic	Bool
 _XimEncodeSavedIMATTRIBUTE(
     Xim			 im,
     XIMResourceList	 res_list,
@@ -918,7 +918,7 @@
 }
 #endif /* XIM_CONNECTABLE */
 
-Private Bool
+XPrivate Bool
 _XimEncodeTopValue(
     Xic			 ic,
     XIMResourceList	 res,
@@ -941,7 +941,7 @@
     return True;
 }
 
-Private Bool
+XPrivate Bool
 _XimEncodePreeditValue(
     Xic			 ic,
     XIMResourceList	 res,
@@ -992,7 +992,7 @@
     return True;
 }
 
-Private Bool
+XPrivate Bool
 _XimEncodeStatusValue(
     Xic			 ic,
     XIMResourceList	 res,
@@ -1043,7 +1043,7 @@
     return True;
 }
 
-Private Bool
+XPrivate Bool
 _XimSetInnerICAttributes(
     Xic			 ic,
     XPointer		 top,
@@ -1066,7 +1066,7 @@
     return _XimEncodeLocalICAttr(ic, res, top, arg, mode);
 }
 
-Public char *
+XPublic char *
 _XimEncodeICATTRIBUTE(
     Xic			  ic,
     XIMResourceList	  res_list,
@@ -1178,7 +1178,7 @@
 }
 
 #ifdef XIM_CONNECTABLE
-Private Bool
+XPrivate Bool
 _XimEncodeSavedPreeditValue(
     Xic			  ic,
     XIMResourceList	  res,
@@ -1220,7 +1220,7 @@
     return True;
 }
 
-Private Bool
+XPrivate Bool
 _XimEncodeSavedStatusValue(
     Xic			  ic,
     XIMResourceList	  res,
@@ -1262,7 +1262,7 @@
     return True;
 }
 
-Public	Bool
+XPublic	Bool
 _XimEncodeSavedICATTRIBUTE(
     Xic			 ic,
     XIMResourceList	 res_list,
@@ -1373,7 +1373,7 @@
 }
 #endif /* XIM_CONNECTABLE */
 
-Private unsigned int
+XPrivate unsigned int
 _XimCountNumberOfAttr(
     INT16	 total,
     CARD16	*attr,
@@ -1398,7 +1398,7 @@
     return n;
 }
 
-Public Bool
+XPublic Bool
 _XimGetAttributeID(
     Xim			  im,
     CARD16		 *buf)
diff -ruBN libX11-1.3.6/modules/im/ximcp/imThaiFlt.c libX11-1.3.6-a/modules/im/ximcp/imThaiFlt.c
--- libX11-1.3.6/modules/im/ximcp/imThaiFlt.c	2010-06-05 01:42:29.000000000 +0800
+++ libX11-1.3.6-a/modules/im/ximcp/imThaiFlt.c	2014-01-13 12:02:34.688032900 +0800
@@ -81,7 +81,7 @@
 
 /* character classification table */
 #define TACTIS_CHARS 256
-Private
+XPrivate
 char const tactis_chtype[TACTIS_CHARS] = {
     CTRL, CTRL, CTRL, CTRL, CTRL, CTRL, CTRL, CTRL,  /*  0 -  7 */
     CTRL, CTRL, CTRL, CTRL, CTRL, CTRL, CTRL, CTRL,  /*  8 - 15 */
@@ -127,7 +127,7 @@
 
 #define CH_CLASSES      17  /* 17 classes of chars */
 
-Private
+XPrivate
 char const write_rules_lookup[CH_CLASSES][CH_CLASSES] = {
         /* Table 0: writing/outputing rules */
         /* row: leading char,  column: following char */
@@ -151,7 +151,7 @@
   ,{XC, NC, NC, NC, NC, NC, NC, NC, NC, NC, CP, NC, CP, NC, NC, NC, NC}/*AV3*/
 };
 
-Private
+XPrivate
 char const wtt_isc1_lookup[CH_CLASSES][CH_CLASSES] = {
       /* Table 1: WTT default input sequence check rules */
       /* row: leading char,  column: following char */
@@ -175,7 +175,7 @@
   ,{XC, AC, AC, AC, AC, AC, AC, RJ, RJ, RJ, CP, RJ, CP, RJ, RJ, RJ, RJ}/*AV3*/
 };
 
-Private
+XPrivate
 char const wtt_isc2_lookup[CH_CLASSES][CH_CLASSES] = {
       /* Table 2: WTT strict input sequence check rules */
       /* row: leading char,  column: following char */
@@ -199,7 +199,7 @@
   ,{XC, AC, AC, AC, RJ, RJ, AC, RJ, RJ, RJ, CP, RJ, CP, RJ, RJ, RJ, RJ}/*AV3*/
 };
 
-Private
+XPrivate
 char const thaicat_isc_lookup[CH_CLASSES][CH_CLASSES] = {
       /* Table 3: Thaicat input sequence check rules */
       /* row: leading char,  column: following char */
@@ -225,7 +225,7 @@
 
 
 /* returns classification of a char */
-Private int
+XPrivate int
 THAI_chtype (unsigned char	ch)
 {
     return tactis_chtype[ch];
@@ -233,7 +233,7 @@
 
 #ifdef UNUSED
 /* returns the display level */
-Private int
+XPrivate int
 THAI_chlevel (unsigned char	ch)
 {
     int     chlevel;
@@ -274,7 +274,7 @@
 
 
 /* return True if char is non-spacing */
-Private Bool
+XPrivate Bool
 THAI_isdead (unsigned char	ch)
 {
     return ((tactis_chtype[ch] == CTRL) || (tactis_chtype[ch] == BV1) ||
@@ -287,7 +287,7 @@
 
 
 /* return True if char is consonant */
-Private Bool
+XPrivate Bool
 THAI_iscons (unsigned char	ch)
 {
     return (tactis_chtype[ch] == CONS);
@@ -295,7 +295,7 @@
 
 
 /* return True if char is vowel */
-Private Bool
+XPrivate Bool
 THAI_isvowel (unsigned char	ch)
 {
     return ((tactis_chtype[ch] == LV)  || (tactis_chtype[ch] == FV1) ||
@@ -307,14 +307,14 @@
 
 
 /* return True if char is tonemark */
-Private Bool
+XPrivate Bool
 THAI_istone (unsigned char	ch)
 {
     return (tactis_chtype[ch] == TONE);
 }
 #endif
 
-Private Bool
+XPrivate Bool
 THAI_iscomposible (
     unsigned char	follow_ch,
     unsigned char	lead_ch)
@@ -324,7 +324,7 @@
             == CP);
 }
 
-Private Bool
+XPrivate Bool
 THAI_isaccepted (
     unsigned char	follow_ch,
     unsigned char	lead_ch,
@@ -355,7 +355,7 @@
 }
 
 #ifdef UNUSED
-Private void
+XPrivate void
 THAI_apply_write_rules(
     unsigned char	*instr,
     unsigned char	*outstr,
@@ -401,7 +401,7 @@
     }
 }
 
-Private int
+XPrivate int
 THAI_find_chtype (
     unsigned char	*instr,
     int		chtype)
@@ -430,7 +430,7 @@
 }
 
 
-Private int
+XPrivate int
 THAI_apply_scm(
     unsigned char	*instr,
     unsigned char	*outstr,
@@ -466,33 +466,33 @@
 
 /* The following functions are copied from XKeyBind.c */
 
-Private void ComputeMaskFromKeytrans();
-Private int IsCancelComposeKey(KeySym *symbol, XKeyEvent *event);
-Private void SetLed(Display *dpy, int num, int state);
-Private CARD8 FindKeyCode();
+XPrivate void ComputeMaskFromKeytrans();
+XPrivate int IsCancelComposeKey(KeySym *symbol, XKeyEvent *event);
+XPrivate void SetLed(Display *dpy, int num, int state);
+XPrivate CARD8 FindKeyCode();
 
 
 /* The following functions are specific to this module */
 
-Private int XThaiTranslateKey();
-Private int XThaiTranslateKeySym();
+XPrivate int XThaiTranslateKey();
+XPrivate int XThaiTranslateKeySym();
 
 
-Private KeySym HexIMNormalKey(
+XPrivate KeySym HexIMNormalKey(
     XicThaiPart *thai_part,
     KeySym symbol,
     XKeyEvent *event);
-Private KeySym HexIMFirstComposeKey(
+XPrivate KeySym HexIMFirstComposeKey(
     XicThaiPart *thai_part,
     KeySym symbol,
     XKeyEvent *event);
-Private KeySym HexIMSecondComposeKey(
+XPrivate KeySym HexIMSecondComposeKey(
     XicThaiPart *thai_part,
     KeySym symbol
     XKeyEvent *event);
-Private KeySym HexIMComposeSequence(KeySym ks1, KeySym ks2);
-Private void InitIscMode(Xic ic);
-Private Bool ThaiComposeConvert(
+XPrivate KeySym HexIMComposeSequence(KeySym ks1, KeySym ks2);
+XPrivate void InitIscMode(Xic ic);
+XPrivate Bool ThaiComposeConvert(
     Display *dpy,
     KeySym insym,
     KeySym *outsym, KeySym *lower, KeySym *upper);
@@ -530,7 +530,7 @@
 #define IC_DeletePreviousChar(ic) \
 		(IC_RealDeletePreviousChar(ic))
 
-Private unsigned char
+XPrivate unsigned char
 IC_RealGetPreviousChar(Xic ic, unsigned short pos)
 {
     XICCallback* cb = &ic->core.string_conversion_callback;
@@ -597,7 +597,7 @@
     }
 }
 
-Private unsigned char
+XPrivate unsigned char
 IC_RealDeletePreviousChar(Xic ic)
 {
     XICCallback* cb = &ic->core.string_conversion_callback;
@@ -701,8 +701,8 @@
  *  State handler to implement the Thai hex input method.
  */
 
-Private int const nstate_handlers = 3;
-Private StateProc state_handler[] = {
+XPrivate int const nstate_handlers = 3;
+XPrivate StateProc state_handler[] = {
 	HexIMNormalKey,
 	HexIMFirstComposeKey,
 	HexIMSecondComposeKey
@@ -718,7 +718,7 @@
 	KeySym to;
 };
 
-Private struct _XMapThaiKey const ThaiComposeTable[] = {
+XPrivate struct _XMapThaiKey const ThaiComposeTable[] = {
 	{ /* 0xa4 */ XK_currency,	/* 0xa5 */ XK_yen },
 	{ /* 0xa2 */ XK_cent,		/* 0xa3 */ XK_sterling },
 	{ /* 0xe6 */ XK_ae,		/* 0xef */ XK_idiaeresis },
@@ -742,7 +742,7 @@
 
 /* Convert keysym to 'Thai Compose' keysym */
 /* The current implementation use latin-1 keysyms */
-Private Bool
+XPrivate Bool
 ThaiComposeConvert(
     Display *dpy,
     KeySym insym,
@@ -762,7 +762,7 @@
     return False;
 }
 
-Private int
+XPrivate int
 XThaiTranslateKey(
     register Display *dpy,
     KeyCode keycode,
@@ -847,7 +847,7 @@
  * Should be changed to TACTIS keysyms when they are defined by the
  * standard.
  */
-Private int
+XPrivate int
 XThaiTranslateKeySym(
     Display *dpy,
     register KeySym symbol,
@@ -956,7 +956,7 @@
 /*
  * given a KeySym, returns the first keycode containing it, if any.
  */
-Private CARD8
+XPrivate CARD8
 FindKeyCode(
     register Display *dpy,
     register KeySym code)
@@ -980,7 +980,7 @@
  * what modifier it is bound to, if any.  Sets the AnyModifier bit if it
  * can't map some keysym to a modifier.
  */
-Private void
+XPrivate void
 ComputeMaskFromKeytrans(
     Display *dpy,
     register struct _XKeytrans *p)
@@ -1020,7 +1020,7 @@
 #define FIRST_COMPOSE_KEY_STATE 1
 #define SECOND_COMPOSE_KEY_STATE 2
 
-Private
+XPrivate
 KeySym HexIMNormalKey(
     XicThaiPart *thai_part,
     KeySym symbol,
@@ -1036,7 +1036,7 @@
 }
 
 
-Private
+XPrivate
 KeySym HexIMFirstComposeKey(
     XicThaiPart *thai_part,
     KeySym symbol,
@@ -1059,7 +1059,7 @@
     return NoSymbol;
 }
 
-Private
+XPrivate
 KeySym HexIMSecondComposeKey(
     XicThaiPart *thai_part,
     KeySym symbol,
@@ -1094,7 +1094,7 @@
  * The current implementation of this routine returns ISO Latin Keysyms.
  */
 
-Private
+XPrivate
 KeySym HexIMComposeSequence(KeySym ks1, KeySym ks2)
 {
 int	hi_digit;
@@ -1131,7 +1131,7 @@
  *	2) whether cancelling key event should be processed or ignored
  */
 
-Private
+XPrivate
 int IsCancelComposeKey(
     KeySym *symbol,
     XKeyEvent *event)
@@ -1163,7 +1163,7 @@
  *	set specified keyboard LED on or off
  */
 
-Private
+XPrivate
 void SetLed(
     Display *dpy,
     int num,
@@ -1180,7 +1180,7 @@
 /*
  * Initialize ISC mode from im modifier
  */
-Private void InitIscMode(Xic ic)
+XPrivate void InitIscMode(Xic ic)
 {
     Xim im;
     char *im_modifier_name;
@@ -1213,7 +1213,7 @@
 /*
  * Helper functions for _XimThaiFilter()
  */
-Private Bool
+XPrivate Bool
 ThaiFltAcceptInput(Xic ic, unsigned char new_char, KeySym symbol)
 {
     DefTreeBase *b = &ic->private.local.base;
@@ -1228,7 +1228,7 @@
     return True;
 }
 
-Private Bool
+XPrivate Bool
 ThaiFltReorderInput(Xic ic, unsigned char previous_char, unsigned char new_char)
 {
     DefTreeBase *b = &ic->private.local.base;
@@ -1242,7 +1242,7 @@
     return True;
 }
 
-Private Bool
+XPrivate Bool
 ThaiFltReplaceInput(Xic ic, unsigned char new_char, KeySym symbol)
 {
     DefTreeBase *b = &ic->private.local.base;
@@ -1258,7 +1258,7 @@
     return True;
 }
 
-Private unsigned
+XPrivate unsigned
 NumLockMask(Display *d)
 {
     int i;
diff -ruBN libX11-1.3.6/modules/im/ximcp/imThaiIc.c libX11-1.3.6-a/modules/im/ximcp/imThaiIc.c
--- libX11-1.3.6/modules/im/ximcp/imThaiIc.c	2010-06-05 01:42:29.000000000 +0800
+++ libX11-1.3.6-a/modules/im/ximcp/imThaiIc.c	2014-01-13 12:02:34.714398400 +0800
@@ -42,7 +42,7 @@
 #include "Xlcint.h"
 #include "Ximint.h"
 
-Private void
+XPrivate void
 _XimThaiUnSetFocus(
     XIC	 xic)
 {
@@ -55,7 +55,7 @@
     return;
 }
 
-Private void
+XPrivate void
 _XimThaiDestroyIC(
     XIC	 xic)
 {
@@ -81,7 +81,7 @@
     return;
 }
 
-Private void
+XPrivate void
 _XimThaiSetFocus(
     XIC	 xic)
 {
@@ -102,7 +102,7 @@
     return;
 }
 
-Private void
+XPrivate void
 _XimThaiReset(
     XIC	 xic)
 {
@@ -115,7 +115,7 @@
     b->utf8[b->tree[ic->private.local.composed].utf8] = '\0';
 }
 
-Private char *
+XPrivate char *
 _XimThaiMbReset(
     XIC	 xic)
 {
@@ -123,7 +123,7 @@
     return (char *)NULL;
 }
 
-Private wchar_t *
+XPrivate wchar_t *
 _XimThaiWcReset(
     XIC	 xic)
 {
@@ -131,7 +131,7 @@
     return (wchar_t *)NULL;
 }
 
-Private XICMethodsRec Thai_ic_methods = {
+XPrivate XICMethodsRec Thai_ic_methods = {
     _XimThaiDestroyIC, 	/* destroy */
     _XimThaiSetFocus,  	/* set_focus */
     _XimThaiUnSetFocus,	/* unset_focus */
diff -ruBN libX11-1.3.6/modules/im/ximcp/imThaiIm.c libX11-1.3.6-a/modules/im/ximcp/imThaiIm.c
--- libX11-1.3.6/modules/im/ximcp/imThaiIm.c	2010-06-05 01:42:29.000000000 +0800
+++ libX11-1.3.6-a/modules/im/ximcp/imThaiIm.c	2014-01-13 12:02:34.732951900 +0800
@@ -46,7 +46,7 @@
 #include "XlcPubI.h"
 #include "Ximint.h"
 
-Private XIMMethodsRec      Xim_im_thai_methods = {
+XPrivate XIMMethodsRec      Xim_im_thai_methods = {
     _XimThaiCloseIM,           /* close */
     _XimLocalSetIMValues,      /* set_values */
     _XimLocalGetIMValues,      /* get_values */
@@ -76,7 +76,7 @@
     return(False);
 }
 
-Public Bool
+XPublic Bool
 _XimThaiOpenIM(Xim im)
 {
     XLCd		 lcd = im->core.lcd;
@@ -145,7 +145,7 @@
     return(False);
 }
 
-Public void
+XPublic void
 _XimThaiIMFree(Xim im)
 {
     if(im->core.im_resources) {
@@ -215,7 +215,7 @@
     return;
 }
 
-Public Status
+XPublic Status
 _XimThaiCloseIM(XIM xim)
 {
     Xim		im = (Xim)xim;
diff -ruBN libX11-1.3.6/modules/im/ximcp/imTrans.c libX11-1.3.6-a/modules/im/ximcp/imTrans.c
--- libX11-1.3.6/modules/im/ximcp/imTrans.c	2010-08-24 16:16:11.000000000 +0800
+++ libX11-1.3.6-a/modules/im/ximcp/imTrans.c	2014-01-13 12:02:34.753458400 +0800
@@ -73,7 +73,7 @@
 #endif
 
 
-Private Bool
+XPrivate Bool
 _XimTransConnect(
     Xim			 im)
 {
@@ -123,7 +123,7 @@
 }
 
 
-Private Bool
+XPrivate Bool
 _XimTransShutdown(
     Xim im)
 {
@@ -143,7 +143,7 @@
 
 
 
-Public Bool
+XPublic Bool
 _XimTransRegisterDispatcher(
     Xim				 im,
     Bool			 (*callback)(
@@ -165,7 +165,7 @@
 }
 
 
-Public void
+XPublic void
 _XimFreeTransIntrCallback(
     Xim				 im)
 {
@@ -181,7 +181,7 @@
 }
 
 
-Public Bool
+XPublic Bool
 _XimTransCallDispatcher(Xim im, INT16 len, XPointer data)
 {
     TransSpecRec		*spec = (TransSpecRec *)im->private.proto.spec;
@@ -195,7 +195,7 @@
 }
 
 
-Public Bool
+XPublic Bool
 _XimTransFilterWaitEvent(
     Display		*d,
     Window		 w,
@@ -210,7 +210,7 @@
 }
 
 
-Public void
+XPublic void
 _XimTransInternalConnection(
     Display		*d,
     int			 fd,
@@ -236,7 +236,7 @@
 }
 
 
-Public Bool
+XPublic Bool
 _XimTransWrite(Xim im, INT16 len, XPointer data)
 {
     TransSpecRec	*spec	= (TransSpecRec *)im->private.proto.spec;
@@ -253,7 +253,7 @@
 }
 
 
-Public Bool
+XPublic Bool
 _XimTransRead(
     Xim			 im,
     XPointer		 recv_buf,
@@ -274,7 +274,7 @@
 }
 
 
-Public void
+XPublic void
 _XimTransFlush(
     Xim		 im)
 {
@@ -283,7 +283,7 @@
 
 
 
-Public Bool
+XPublic Bool
 _XimTransConf(
     Xim		   	 im,
     char	 	*address)
diff -ruBN libX11-1.3.6/modules/im/ximcp/imTransR.c libX11-1.3.6-a/modules/im/ximcp/imTransR.c
--- libX11-1.3.6/modules/im/ximcp/imTransR.c	2010-06-05 01:42:29.000000000 +0800
+++ libX11-1.3.6-a/modules/im/ximcp/imTransR.c	2014-01-13 12:02:34.775917900 +0800
@@ -57,7 +57,7 @@
 #include "XimTrInt.h"
 #include "Ximint.h"
 
-Public TransportSW _XimTransportRec[] = {
+XPublic TransportSW _XimTransportRec[] = {
     { "X",          _XimXConf },  /* 1st entry must be X.
 					This will be a fallback */
 #ifdef TCPCONN
@@ -75,25 +75,25 @@
     { (char *)NULL, (Bool (*)(Xim, char *))NULL },
 };
 
-Public Bool
+XPublic Bool
 _XimConnect(Xim im)
 {
     return im->private.proto.connect(im);
 }
 
-Public Bool
+XPublic Bool
 _XimShutdown(Xim im)
 {
     return im->private.proto.shutdown(im);
 }
 
-Public Bool
+XPublic Bool
 _XimWrite(Xim im, INT16 len, XPointer data)
 {
     return im->private.proto.write(im, len, data);
 }
 
-Private int
+XPrivate int
 _CheckProtocolData(
     Xim		  im,
     char	 *recv_buf)
@@ -104,7 +104,7 @@
     return data_len;
 }
 
-Private int
+XPrivate int
 _XimReadData(
     Xim		 im,
     INT16	*len,
@@ -221,7 +221,7 @@
     return XIM_TRUE;
 }
 
-Private Bool
+XPrivate Bool
 _XimCallDispatcher(
     Xim		 im,
     INT16	 len,
@@ -230,7 +230,7 @@
     return im->private.proto.call_dispatcher(im, len, data);
 }
 
-Public int
+XPublic int
 _XimRead(Xim im, INT16 *len, XPointer buf, int buf_size,
 	 Bool (*predicate)(Xim, INT16, XPointer, XPointer), XPointer arg)
 {
@@ -252,7 +252,7 @@
     return True;
 }
 
-Public Bool
+XPublic Bool
 _XimRegisterDispatcher(
     Xim		 im,
     Bool	 (*callback)(
@@ -263,14 +263,14 @@
     return im->private.proto.register_dispatcher(im, callback, call_data);
 }
 
-Public void
+XPublic void
 _XimFlush(Xim im)
 {
     im->private.proto.flush(im);
     return;
 }
 
-Public Bool
+XPublic Bool
 _XimFilterWaitEvent(Xim im)
 {
     INT16	 read_len;
diff -ruBN libX11-1.3.6/modules/im/ximcp/imTrX.c libX11-1.3.6-a/modules/im/ximcp/imTrX.c
--- libX11-1.3.6/modules/im/ximcp/imTrX.c	2010-08-24 16:16:11.000000000 +0800
+++ libX11-1.3.6-a/modules/im/ximcp/imTrX.c	2014-01-13 12:02:34.802283400 +0800
@@ -61,7 +61,7 @@
 #include "XimTrInt.h"
 #include "XimTrX.h"
 
-Private Bool
+XPrivate Bool
 _XimXRegisterDispatcher(
     Xim			 im,
     Bool		 (*callback)(
@@ -82,7 +82,7 @@
     return True;
 }
 
-Private void
+XPrivate void
 _XimXFreeIntrCallback(
     Xim			 im)
 {
@@ -97,7 +97,7 @@
     return;
 }
 
-Private Bool
+XPrivate Bool
 _XimXCallDispatcher(Xim im, INT16 len, XPointer data)
 {
     register XIntrCallbackRec	*rec;
@@ -110,7 +110,7 @@
     return False;
 }
 
-Private Bool
+XPrivate Bool
 _XimXFilterWaitEvent(
     Display	*d,
     Window	 w,
@@ -138,7 +138,7 @@
      return ret;
 }
 
-Private Bool
+XPrivate Bool
 _CheckConnect(
     Display	*display,
     XEvent	*event,
@@ -154,7 +154,7 @@
     return False;
 }
 
-Private Bool
+XPrivate Bool
 _XimXConnect(Xim im)
 {
     XEvent	 event;
@@ -225,7 +225,7 @@
     return True;
 }
 
-Private Bool
+XPrivate Bool
 _XimXShutdown(Xim im)
 {
     XSpecRec	*spec = (XSpecRec *)im->private.proto.spec;
@@ -245,7 +245,7 @@
     return True;
 }
 
-Private char *
+XPrivate char *
 _NewAtom(
     char	*atomName)
 {
@@ -256,7 +256,7 @@
     return atomName;
 }
 
-Private Bool
+XPrivate Bool
 _XimXWrite(Xim im, INT16 len, XPointer data)
 {
     Atom	 atom;
@@ -317,7 +317,7 @@
     return True;
 }
 
-Private Bool
+XPrivate Bool
 _XimXGetReadData(
     Xim			  im,
     char		 *buf,
@@ -432,7 +432,7 @@
     return True;
 }
 
-Private Bool
+XPrivate Bool
 _CheckCMEvent(
     Display	*display,
     XEvent	*event,
@@ -453,7 +453,7 @@
     return False;
 }
 
-Private Bool
+XPrivate Bool
 _XimXRead(Xim im, XPointer recv_buf, int buf_len, int *ret_len)
 {
     XEvent	*ev;
@@ -476,14 +476,14 @@
     return True;
 }
 
-Private void
+XPrivate void
 _XimXFlush(Xim im)
 {
     XFlush(im->core.display);
     return;
 }
 
-Public Bool
+XPublic Bool
 _XimXConf(Xim im, char *address)
 {
     XSpecRec	*spec;
diff -ruBN libX11-1.3.6/src/xlibi18n/Ximint.h libX11-1.3.6-a/src/xlibi18n/Ximint.h
--- libX11-1.3.6/src/xlibi18n/Ximint.h	2010-06-05 01:42:29.000000000 +0800
+++ libX11-1.3.6-a/src/xlibi18n/Ximint.h	2014-01-13 12:02:29.214750400 +0800
@@ -36,8 +36,8 @@
 #include <stdio.h>
 #include <X11/Xutil.h>
 
-#define Public /**/
-#define Private static
+#define XPublic /**/
+#define XPrivate static
 
 typedef struct _Xim	*Xim;
 typedef struct _Xic	*Xic;
@@ -982,7 +982,7 @@
 );
 #endif
 
-extern Public Bool
+extern XPublic Bool
 _XimRegisterDispatcher(
     Xim          im,
     Bool         (*callback)(
@@ -990,7 +990,7 @@
                              ),
     XPointer     call_data);
 
-extern Public Bool
+extern XPublic Bool
 _XimRespSyncReply(
     Xic          ic,
     BITMASK16    mode);
